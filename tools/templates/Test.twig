<?php

/*
 * This file is auto generated! Do not edit!
 */

declare(strict_types=1);

namespace {{ namespace }};

{% for classImport in classImports.get() %}
{{ classImport.toImportString() }}
{% endfor %}

class {{ classname }} extends TestCase
{
    protected string $json;

    protected function setUp(): void
    {
        $this->json = <<<'JSON'
{{ json | raw }}
JSON;
    }

    public function testModelInstantation(): void
    {
        self::assertTrue(true);

        $array = json_decode($this->json, true);

        $model = {{ modelClass }}::fromArray($array);

        foreach ($array as $property => $value) {
            $property = {{ modelClass }}::sanitizePropertyName($property);

            self::assertObjectHasProperty($property, $model);

            $modelValue = $model->{$property};

            if (!is_string($modelValue) && !is_int($modelValue)) {
                // TODO find some other way to test this
                continue;
            }

            self::assertEquals($value, $model->{$property});
        }
    }
}
