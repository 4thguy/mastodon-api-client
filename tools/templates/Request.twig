<?php

/*
 * This file is auto generated! Do not edit!
 */

declare(strict_types=1);

namespace {{ namespace }};

{% for classImport in classImports.get() %}
{{ classImport.toImportString() }}
{% endfor %}

/**
 * {{ description | raw }}
 *
 * @implements \Vazaha\Mastodon\Interfaces\RequestInterface<\{{ resultClassName.getFQN() }}>
 *
{% if url %}
 * @see {{ url }}
{% endif %}
 */
final class {{ classname }} extends \{{ requestClassName.getFQN() }} implements RequestInterface
{

    /**
    {% for property in allParams %}
     * @param {% if property.typeHint %}{{ property.typeHint | raw }}{% else %}{% if property.nullable %}?{% endif %}{{ property.type }}{% endif %} ${{ property.name }} {{ property.description | raw }}
    {% endfor %}
     */
    public function __construct(
{% for property in allParams %}
    public {% if property.nullable %}?{% endif %}{{ property.type }} ${{ property.name }}{% if property.nullable %} = null{% endif %},

{% endfor %}
    ) {
    }

    public function getEndpoint(): string
    {
        return {{ endpointExpression | raw }};
    }

    public function getQueryParams(): array
    {
        return [
{% for param in queryParams %}
            '{{ param.name }}' => $this->{{ param.name }},
{% endfor %}
        ];
    }

    public function getFormParams(): array
    {
        return [
{% for param in formParams %}
            '{{ param.name }}' => $this->{{ param.name }},
{% endfor %}
        ];
    }

    public function getHttpMethod(): HttpMethod
    {
        return HttpMethod::{{ method }};
    }
}
