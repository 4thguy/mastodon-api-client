{
  "namespaces": {
    "push": {
      "url": "https://docs.joinmastodon.org/methods/push/",
      "methods": {
        "get": {
          "method": "GET",
          "namespace": "push",
          "returnsArray": null,
          "description": "Get current subscription",
          "url": "https://docs.joinmastodon.org/methods/push/#get",
          "returns": "WebPushSubscription",
          "formParams": [],
          "queryParams": [],
          "name": "get",
          "pathParams": [],
          "uri": "/api/v1/push/subscription"
        },
        "create": {
          "returnsArray": null,
          "method": "POST",
          "namespace": "push",
          "uri": "/api/v1/push/subscription",
          "pathParams": [],
          "queryParams": [],
          "formParams": [
            {
              "required": 0,
              "nullable": 1,
              "name": "subscription",
              "description": "subscription[endpoint]: The endpoint URL that is called when a notification event occurs.",
              "type": "array"
            },
            {
              "type": "array",
              "description": "data[alerts][mention]: Receive mention notifications? Defaults to false.",
              "name": "data",
              "nullable": 1,
              "required": 0
            }
          ],
          "returns": "WebPushSubscription",
          "name": "create",
          "url": "https://docs.joinmastodon.org/methods/push/#create",
          "description": "Subscribe to push notifications"
        },
        "delete": {
          "description": "Remove current subscription",
          "pathParams": [],
          "uri": "/api/v1/push/subscription",
          "url": "https://docs.joinmastodon.org/methods/push/#delete",
          "name": "delete",
          "formParams": [],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "namespace": "push",
          "method": "DELETE",
          "returnsArray": null
        },
        "update": {
          "method": "PUT",
          "namespace": "push",
          "returnsArray": null,
          "description": "Change types of notifications",
          "formParams": [
            {
              "description": "data[alerts][mention]: Receive mention notifications? Defaults to false.",
              "type": "array",
              "required": 0,
              "name": "data",
              "nullable": 1
            },
            {
              "description": "Specify whether to receive push notifications from `all`, `followed`, `follower`, or `none` users.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "policy"
            }
          ],
          "returns": "WebPushSubscription",
          "queryParams": [],
          "name": "update",
          "url": "https://docs.joinmastodon.org/methods/push/#update",
          "uri": "/api/v1/push/subscription",
          "pathParams": []
        }
      },
      "description": " Subscribe to and receive push notifications when a server-side notification is received, via the Web Push API"
    },
    "favourites": {
      "url": "https://docs.joinmastodon.org/methods/favourites/",
      "methods": {
        "get": {
          "method": "GET",
          "namespace": "favourites",
          "returnsArray": 1,
          "description": "View favourited statuses",
          "pathParams": [],
          "uri": "/api/v1/favourites",
          "url": "https://docs.joinmastodon.org/methods/favourites/#get",
          "formParams": [],
          "queryParams": [
            {
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "nullable": 0,
              "name": "limit",
              "required": 0
            }
          ],
          "name": "get",
          "returns": "Status"
        }
      },
      "description": "View your favourites. See also statuses/:id/{favourite,unfavourite}"
    },
    "custom_emojis": {
      "description": " Each site can define and upload its own custom emoji to be attached to profiles or statuses.",
      "methods": {
        "get": {
          "pathParams": [],
          "uri": "/api/v1/custom_emojis",
          "url": "https://docs.joinmastodon.org/methods/custom_emojis/#get",
          "queryParams": [],
          "formParams": [],
          "returns": "CustomEmoji",
          "name": "get",
          "description": "View all custom emoji",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "custom_emojis"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/custom_emojis/"
    },
    "blocks": {
      "url": "https://docs.joinmastodon.org/methods/blocks/",
      "methods": {
        "get": {
          "method": "GET",
          "namespace": "blocks",
          "returnsArray": 1,
          "description": "View blocked users",
          "formParams": [],
          "queryParams": [
            {
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts.",
              "name": "limit",
              "nullable": 0,
              "required": 0
            }
          ],
          "returns": "Account",
          "name": "get",
          "url": "https://docs.joinmastodon.org/methods/blocks/#get",
          "uri": "/api/v1/blocks",
          "pathParams": []
        }
      },
      "description": "View your blocks. See also accounts/:id/{block,unblock}"
    },
    "instance": {
      "url": "https://docs.joinmastodon.org/methods/instance/",
      "methods": {
        "v1": {
          "pathParams": [],
          "uri": "/api/v1/instance",
          "url": "https://docs.joinmastodon.org/methods/instance/#v1",
          "formParams": [],
          "queryParams": [],
          "returns": "V1::Instance",
          "name": "v1",
          "description": "(DEPRECATED) View server information (V1)",
          "returnsArray": null,
          "namespace": "instance",
          "method": "GET"
        },
        "extended_description": {
          "returnsArray": null,
          "namespace": "instance",
          "method": "GET",
          "uri": "/api/v1/instance/extended_description",
          "pathParams": [],
          "formParams": [],
          "queryParams": [],
          "returns": "ExtendedDescription",
          "name": "extended_description",
          "url": "https://docs.joinmastodon.org/methods/instance/#extended_description",
          "description": "View extended description"
        },
        "domain_blocks": {
          "pathParams": [],
          "uri": "/api/v1/instance/domain_blocks",
          "url": "https://docs.joinmastodon.org/methods/instance/#domain_blocks",
          "formParams": [],
          "name": "domain_blocks",
          "queryParams": [],
          "returns": "DomainBlock",
          "description": "View moderated servers",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "instance"
        },
        "rules": {
          "uri": "/api/v1/instance/rules",
          "pathParams": [],
          "formParams": [],
          "queryParams": [],
          "returns": "Rule",
          "name": "rules",
          "url": "https://docs.joinmastodon.org/methods/instance/#rules",
          "description": "List of rules",
          "returnsArray": 1,
          "namespace": "instance",
          "method": "GET"
        },
        "v2": {
          "returnsArray": null,
          "namespace": "instance",
          "method": "GET",
          "name": "v2",
          "formParams": [],
          "queryParams": [],
          "returns": "Instance",
          "url": "https://docs.joinmastodon.org/methods/instance/#v2",
          "uri": "/api/v2/instance",
          "pathParams": [],
          "description": "View server information"
        },
        "activity": {
          "method": "GET",
          "namespace": "instance",
          "returnsArray": 1,
          "description": "Weekly activity",
          "pathParams": [],
          "uri": "/api/v1/instance/activity",
          "url": "https://docs.joinmastodon.org/methods/instance/#activity",
          "name": "activity",
          "formParams": [],
          "queryParams": [],
          "returns": "EmptyOrUnknown"
        },
        "peers": {
          "returnsArray": 1,
          "namespace": "instance",
          "method": "GET",
          "pathParams": [],
          "uri": "/api/v1/instance/peers",
          "url": "https://docs.joinmastodon.org/methods/instance/#peers",
          "formParams": [],
          "name": "peers",
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "description": "List of connected domains"
        }
      },
      "description": "Discover information about a Mastodon website."
    },
    "bookmarks": {
      "description": "View your bookmarks. See also statuses/:id/{bookmark,unbookmark}",
      "url": "https://docs.joinmastodon.org/methods/bookmarks/",
      "methods": {
        "get": {
          "description": "View bookmarked statuses",
          "pathParams": [],
          "uri": "/api/v1/bookmarks",
          "url": "https://docs.joinmastodon.org/methods/bookmarks/#get",
          "formParams": [],
          "queryParams": [
            {
              "required": 0,
              "nullable": 0,
              "name": "limit",
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "type": "integer"
            }
          ],
          "returns": "Status",
          "name": "get",
          "namespace": "bookmarks",
          "method": "GET",
          "returnsArray": 1
        }
      }
    },
    "mutes": {
      "url": "https://docs.joinmastodon.org/methods/mutes/",
      "methods": {
        "get": {
          "method": "GET",
          "namespace": "mutes",
          "returnsArray": 1,
          "description": "View muted accounts",
          "pathParams": [],
          "uri": "/api/v1/mutes",
          "url": "https://docs.joinmastodon.org/methods/mutes/#get",
          "name": "get",
          "formParams": [],
          "queryParams": [
            {
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts.",
              "nullable": 0,
              "name": "limit",
              "required": 0
            }
          ],
          "returns": "Account"
        }
      },
      "description": "View your mutes. See also accounts/:id/{mute,unmute}"
    },
    "endorsements": {
      "methods": {
        "get": {
          "method": "GET",
          "namespace": "endorsements",
          "returnsArray": 1,
          "description": "View currently featured profiles",
          "pathParams": [],
          "uri": "/api/v1/endorsements",
          "url": "https://docs.joinmastodon.org/methods/endorsements/#get",
          "formParams": [],
          "queryParams": [
            {
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts.",
              "type": "integer",
              "required": 0,
              "nullable": 0,
              "name": "limit"
            }
          ],
          "returns": "Account",
          "name": "get"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/endorsements/",
      "description": "Feature other profiles on your own profile. See also accounts/:id/{pin,unpin}"
    },
    "markers": {
      "url": "https://docs.joinmastodon.org/methods/markers/",
      "methods": {
        "create": {
          "uri": "/api/v1/markers",
          "pathParams": [],
          "formParams": [
            {
              "type": "array",
              "description": "home[last_read_id]: ID of the last status read in the home timeline.",
              "nullable": 1,
              "name": "home",
              "required": 0
            },
            {
              "description": "notifications[last_read_id]: ID of the last notification read.",
              "type": "array",
              "required": 0,
              "nullable": 1,
              "name": "notifications"
            }
          ],
          "returns": "Marker",
          "queryParams": [],
          "name": "create",
          "url": "https://docs.joinmastodon.org/methods/markers/#create",
          "description": "Save your position in a timeline",
          "returnsArray": null,
          "namespace": "markers",
          "method": "POST"
        },
        "get": {
          "method": "GET",
          "namespace": "markers",
          "returnsArray": null,
          "description": "Get saved timeline positions",
          "uri": "/api/v1/markers",
          "pathParams": [],
          "formParams": [],
          "queryParams": [
            {
              "name": "timeline[]",
              "nullable": 0,
              "required": 0,
              "type": "array<String>",
              "description": "Specify the timeline(s) for which markers should be fetched. Possible values: `home`, `notifications`. If not provided, an empty object will be returned."
            }
          ],
          "name": "get",
          "returns": "Marker",
          "url": "https://docs.joinmastodon.org/methods/markers/#get"
        }
      },
      "description": "Save and restore your position in timelines."
    },
    "trends": {
      "methods": {
        "statuses": {
          "method": "GET",
          "namespace": "trends",
          "returnsArray": 1,
          "description": "View trending statuses",
          "uri": "/api/v1/trends/statuses",
          "pathParams": [],
          "queryParams": [
            {
              "required": 0,
              "name": "limit",
              "nullable": 0,
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "type": "integer"
            },
            {
              "type": "integer",
              "description": "Skip the first n results.",
              "nullable": 0,
              "name": "offset",
              "required": 0
            }
          ],
          "formParams": [],
          "name": "statuses",
          "returns": "Status",
          "url": "https://docs.joinmastodon.org/methods/trends/#statuses"
        },
        "links": {
          "namespace": "trends",
          "method": "GET",
          "returnsArray": 1,
          "description": "View trending links",
          "returns": "Trends::Link",
          "formParams": [],
          "queryParams": [
            {
              "nullable": 0,
              "name": "limit",
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 10 links. Max 20 links."
            },
            {
              "description": "Skip the first n results.",
              "type": "integer",
              "required": 0,
              "nullable": 0,
              "name": "offset"
            }
          ],
          "name": "links",
          "url": "https://docs.joinmastodon.org/methods/trends/#links",
          "uri": "/api/v1/trends/links",
          "pathParams": []
        },
        "tags": {
          "returnsArray": 1,
          "namespace": "trends",
          "method": "GET",
          "uri": "/api/v1/trends/tags",
          "pathParams": [],
          "queryParams": [
            {
              "nullable": 0,
              "name": "limit",
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 10 tags. Max 20 tags."
            },
            {
              "description": "Skip the first n results.",
              "type": "integer",
              "required": 0,
              "name": "offset",
              "nullable": 0
            }
          ],
          "formParams": [],
          "name": "tags",
          "returns": "Tag",
          "url": "https://docs.joinmastodon.org/methods/trends/#tags",
          "description": "View trending tags"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/trends/",
      "description": "View hashtags that are currently being used more frequently than usual."
    },
    "scheduled_statuses": {
      "methods": {
        "get": {
          "returnsArray": 1,
          "method": "GET",
          "namespace": "scheduled_statuses",
          "url": "https://docs.joinmastodon.org/methods/scheduled_statuses/#get",
          "queryParams": [
            {
              "nullable": 0,
              "name": "max_id ",
              "required": 0,
              "type": "string",
              "description": "Return results older than ID."
            },
            {
              "type": "string",
              "description": "Return results newer than ID.",
              "nullable": 0,
              "name": "since_id",
              "required": 0
            },
            {
              "name": "min_id",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Return results immediately newer than ID."
            },
            {
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "type": "integer",
              "required": 0,
              "name": "limit",
              "nullable": 0
            }
          ],
          "formParams": [],
          "returns": "ScheduledStatus",
          "name": "get",
          "pathParams": [],
          "uri": "/api/v1/scheduled_statuses",
          "description": "View scheduled statuses"
        },
        "get-one": {
          "returnsArray": null,
          "method": "GET",
          "namespace": "scheduled_statuses",
          "uri": "/api/v1/scheduled_statuses/:id",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the ScheduledStatus in the database.",
              "type": "string"
            }
          ],
          "name": "get-one",
          "formParams": [],
          "queryParams": [],
          "returns": "ScheduledStatus",
          "url": "https://docs.joinmastodon.org/methods/scheduled_statuses/#get-one",
          "description": "View a single scheduled status"
        },
        "cancel": {
          "returnsArray": null,
          "method": "DELETE",
          "namespace": "scheduled_statuses",
          "uri": "/api/v1/scheduled_statuses/:id",
          "pathParams": [
            {
              "description": "The ID of the ScheduledStatus in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "formParams": [],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "name": "cancel",
          "url": "https://docs.joinmastodon.org/methods/scheduled_statuses/#cancel",
          "description": "Cancel a scheduled status"
        },
        "update": {
          "method": "PUT",
          "namespace": "scheduled_statuses",
          "returnsArray": null,
          "description": "Update a scheduled status's publishing date",
          "url": "https://docs.joinmastodon.org/methods/scheduled_statuses/#update",
          "formParams": [
            {
              "name": "scheduled_at",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "ISO 8601 Datetime at which the status will be published. Must be at least 5 minutes into the future."
            }
          ],
          "queryParams": [],
          "returns": "ScheduledStatus",
          "name": "update",
          "pathParams": [
            {
              "description": "The ID of the ScheduledStatus in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "uri": "/api/v1/scheduled_statuses/:id"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/scheduled_statuses/",
      "description": "Manage statuses that were scheduled to be published at a future date."
    },
    "filters": {
      "url": "https://docs.joinmastodon.org/methods/filters/",
      "methods": {
        "keywords-get": {
          "namespace": "filters",
          "method": "GET",
          "returnsArray": 1,
          "description": "View keywords added to a filter",
          "pathParams": [
            {
              "required": 1,
              "name": "filter_id",
              "nullable": 0,
              "description": "The ID of the Filter in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v2/filters/:filter_id/keywords",
          "url": "https://docs.joinmastodon.org/methods/filters/#keywords-get",
          "queryParams": [],
          "formParams": [],
          "returns": "FilterKeyword",
          "name": "keywords-get"
        },
        "get": {
          "method": "GET",
          "namespace": "filters",
          "returnsArray": 1,
          "description": "View all filters",
          "pathParams": [],
          "uri": "/api/v2/filters",
          "url": "https://docs.joinmastodon.org/methods/filters/#get",
          "queryParams": [],
          "formParams": [],
          "returns": "Filter",
          "name": "get"
        },
        "statuses-get": {
          "returns": "FilterStatus",
          "formParams": [],
          "queryParams": [],
          "name": "statuses-get",
          "url": "https://docs.joinmastodon.org/methods/filters/#statuses-get",
          "uri": "/api/v2/filters/:filter_id/statuses",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Filter in the database.",
              "name": "filter_id",
              "nullable": 0,
              "required": 1
            }
          ],
          "description": "View all status filters",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "filters"
        },
        "delete": {
          "uri": "/api/v2/filters/:id",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Filter in the database.",
              "type": "string"
            }
          ],
          "formParams": [],
          "returns": "EmptyOrUnknown",
          "queryParams": [],
          "name": "delete",
          "url": "https://docs.joinmastodon.org/methods/filters/#delete",
          "description": "Delete a filter",
          "returnsArray": null,
          "namespace": "filters",
          "method": "DELETE"
        },
        "update": {
          "namespace": "filters",
          "method": "PUT",
          "returnsArray": null,
          "description": "Update a filter",
          "url": "https://docs.joinmastodon.org/methods/filters/#update",
          "queryParams": [],
          "formParams": [
            {
              "description": "The name of the filter group.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "title"
            },
            {
              "description": "Where the filter should be applied. Specify at least one of `home`, `notifications`, `public`, `thread`, `account`.",
              "type": "array<String>",
              "required": 0,
              "nullable": 0,
              "name": "context[]"
            },
            {
              "required": 0,
              "name": "filter_action",
              "nullable": 0,
              "description": "The policy to be applied when the filter is matched. Specify `warn` or `hide`.",
              "type": "string"
            },
            {
              "type": "integer",
              "description": "How many seconds from now should the filter expire?",
              "nullable": 0,
              "name": "expires_in",
              "required": 0
            },
            {
              "type": "array",
              "description": "keywords_attributes[][keyword]: A keyword to be added to the newly-created filter group.",
              "name": "keywords_attributes",
              "nullable": 1,
              "required": 0
            }
          ],
          "name": "update",
          "returns": "Filter",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Filter in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v2/filters/:id"
        },
        "update-v1": {
          "returnsArray": null,
          "method": "PUT",
          "namespace": "filters",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the FilterKeyword in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/filters/:id",
          "url": "https://docs.joinmastodon.org/methods/filters/#update-v1",
          "formParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "phrase",
              "description": "The text to be filtered.",
              "type": "string"
            },
            {
              "name": "context[]",
              "nullable": 0,
              "required": 1,
              "type": "array<String>",
              "description": "Specify at least one of `home`, `notifications`, `public`, `thread`, `account`."
            },
            {
              "description": "Should the server irreversibly drop matching entities from home and notifications? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "name": "irreversible",
              "nullable": 0
            },
            {
              "type": "boolean",
              "description": "Should the filter consider word boundaries? Defaults to false.",
              "name": "whole_word",
              "nullable": 0,
              "required": 0
            },
            {
              "required": 0,
              "name": "expires_in",
              "nullable": 0,
              "description": "Number of seconds from now that the filter should expire. Otherwise, `null` for a filter that doesn't expire.",
              "type": "integer"
            }
          ],
          "queryParams": [],
          "returns": "V1::Filter",
          "name": "update-v1",
          "description": "Update a filter"
        },
        "delete-v1": {
          "description": "Remove a filter",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Filter in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "uri": "/api/v1/filters/:id",
          "url": "https://docs.joinmastodon.org/methods/filters/#delete-v1",
          "formParams": [],
          "returns": "EmptyOrUnknown",
          "queryParams": [],
          "name": "delete-v1",
          "method": "DELETE",
          "namespace": "filters",
          "returnsArray": null
        },
        "get-one": {
          "returnsArray": null,
          "namespace": "filters",
          "method": "GET",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Filter in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v2/filters/:id",
          "url": "https://docs.joinmastodon.org/methods/filters/#get-one",
          "formParams": [],
          "name": "get-one",
          "queryParams": [],
          "returns": "Filter",
          "description": "View a specific filter"
        },
        "get-one-v1": {
          "returnsArray": null,
          "namespace": "filters",
          "method": "GET",
          "uri": "/api/v1/filters/:id",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the FilterKeyword in the database."
            }
          ],
          "name": "get-one-v1",
          "formParams": [],
          "queryParams": [],
          "returns": "V1::Filter",
          "url": "https://docs.joinmastodon.org/methods/filters/#get-one-v1",
          "description": "View a single filter"
        },
        "keywords-update": {
          "method": "PUT",
          "namespace": "filters",
          "returnsArray": null,
          "description": "Edit a keyword within a filter",
          "url": "https://docs.joinmastodon.org/methods/filters/#keywords-update",
          "name": "keywords-update",
          "formParams": [
            {
              "name": "keyword",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "The keyword to be added to the filter group."
            },
            {
              "name": "whole_word",
              "nullable": 0,
              "required": 0,
              "type": "boolean",
              "description": "Whether the keyword should consider word boundaries."
            }
          ],
          "queryParams": [],
          "returns": "FilterKeyword",
          "pathParams": [
            {
              "name": "id",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "The ID of the FilterKeyword in the database."
            }
          ],
          "uri": "/api/v2/filters/keywords/:id"
        },
        "get-v1": {
          "method": "GET",
          "namespace": "filters",
          "returnsArray": 1,
          "description": "View your filters",
          "name": "get-v1",
          "formParams": [],
          "queryParams": [],
          "returns": "V1::Filter",
          "url": "https://docs.joinmastodon.org/methods/filters/#get-v1",
          "uri": "/api/v1/filters",
          "pathParams": []
        },
        "statuses-add": {
          "description": "Add a status to a filter group",
          "uri": "/api/v2/filters/:filter_id/statuses",
          "pathParams": [
            {
              "nullable": 0,
              "name": "filter_id",
              "required": 1,
              "type": "string",
              "description": "The ID of the Filter in the database."
            }
          ],
          "returns": "FilterStatus",
          "formParams": [],
          "queryParams": [],
          "name": "statuses-add",
          "url": "https://docs.joinmastodon.org/methods/filters/#statuses-add",
          "namespace": "filters",
          "method": "POST",
          "returnsArray": null
        },
        "keywords-create": {
          "returnsArray": null,
          "namespace": "filters",
          "method": "POST",
          "url": "https://docs.joinmastodon.org/methods/filters/#keywords-create",
          "queryParams": [],
          "formParams": [
            {
              "description": "The keyword to be added to the filter group.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "keyword"
            },
            {
              "description": "Whether the keyword should consider word boundaries.",
              "type": "boolean",
              "required": 0,
              "nullable": 0,
              "name": "whole_word"
            }
          ],
          "name": "keywords-create",
          "returns": "FilterKeyword",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Filter in the database.",
              "nullable": 0,
              "name": "filter_id",
              "required": 1
            }
          ],
          "uri": "/api/v2/filters/:filter_id/keywords",
          "description": "Add a keyword to a filter"
        },
        "create": {
          "description": "Create a filter",
          "uri": "/api/v2/filters",
          "pathParams": [],
          "queryParams": [],
          "formParams": [
            {
              "description": "The name of the filter group.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "title"
            },
            {
              "description": "Where the filter should be applied. Specify at least one of `home`, `notifications`, `public`, `thread`, `account`.",
              "type": "array<String>",
              "required": 1,
              "nullable": 0,
              "name": "context[]"
            },
            {
              "description": "The policy to be applied when the filter is matched. Specify `warn` or `hide`.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "filter_action"
            },
            {
              "required": 0,
              "name": "expires_in",
              "nullable": 0,
              "description": "How many seconds from now should the filter expire?",
              "type": "integer"
            },
            {
              "type": "array",
              "description": "keywords_attributes[][keyword]: A keyword to be added to the newly-created filter group.",
              "name": "keywords_attributes",
              "nullable": 1,
              "required": 0
            }
          ],
          "returns": "Filter",
          "name": "create",
          "url": "https://docs.joinmastodon.org/methods/filters/#create",
          "namespace": "filters",
          "method": "POST",
          "returnsArray": null
        },
        "statuses-remove": {
          "uri": "/api/v2/filters/statuses/:id",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the FilterStatus in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "queryParams": [],
          "formParams": [],
          "name": "statuses-remove",
          "returns": "FilterStatus",
          "url": "https://docs.joinmastodon.org/methods/filters/#statuses-remove",
          "description": "Remove a status from a filter group",
          "returnsArray": null,
          "namespace": "filters",
          "method": "DELETE"
        },
        "statuses-get-one": {
          "namespace": "filters",
          "method": "GET",
          "returnsArray": null,
          "description": "View a single status filter",
          "url": "https://docs.joinmastodon.org/methods/filters/#statuses-get-one",
          "queryParams": [],
          "formParams": [],
          "name": "statuses-get-one",
          "returns": "FilterStatus",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the FilterStatus in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "uri": "/api/v2/filters/statuses/:id"
        },
        "keywords-delete": {
          "returnsArray": null,
          "namespace": "filters",
          "method": "DELETE",
          "pathParams": [
            {
              "description": "The ID of the FilterKeyword in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "uri": "/api/v2/filters/keywords/:id",
          "url": "https://docs.joinmastodon.org/methods/filters/#keywords-delete",
          "formParams": [],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "name": "keywords-delete",
          "description": "Remove keywords from a filter"
        },
        "create-v1": {
          "namespace": "filters",
          "method": "POST",
          "returnsArray": null,
          "description": "Create a filter",
          "pathParams": [],
          "uri": "/api/v1/filters",
          "url": "https://docs.joinmastodon.org/methods/filters/#create-v1",
          "queryParams": [],
          "formParams": [
            {
              "required": 1,
              "name": "phrase",
              "nullable": 0,
              "description": "The text to be filtered.",
              "type": "string"
            },
            {
              "type": "array<String>",
              "description": "Where the filter should be applied. Specify at least one of `home`, `notifications`, `public`, `thread`, `account`.",
              "name": "context[]",
              "nullable": 0,
              "required": 1
            },
            {
              "required": 0,
              "name": "irreversible",
              "nullable": 0,
              "description": "Should the server irreversibly drop matching entities from home and notifications? Defaults to false.",
              "type": "boolean"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "whole_word",
              "description": "Should the filter consider word boundaries for this keyword? Defaults to false.",
              "type": "boolean"
            },
            {
              "name": "expires_in",
              "nullable": 0,
              "required": 0,
              "type": "integer",
              "description": "Number of seconds from now that the filter should expire. Otherwise, `null` for a filter that doesn't expire."
            }
          ],
          "returns": "V1::Filter",
          "name": "create-v1"
        },
        "keywords-get-one": {
          "returnsArray": null,
          "namespace": "filters",
          "method": "GET",
          "formParams": [],
          "queryParams": [],
          "returns": "FilterKeyword",
          "name": "keywords-get-one",
          "url": "https://docs.joinmastodon.org/methods/filters/#keywords-get-one",
          "uri": "/api/v2/filters/keywords/:id",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the FilterKeyword in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "description": "View a single keyword"
        }
      },
      "description": "Create and manage filters."
    },
    "conversations": {
      "description": " Direct conversations with other participants. (Currently, just threads containing a post with \"direct\" visibility.)",
      "url": "https://docs.joinmastodon.org/methods/conversations/",
      "methods": {
        "get": {
          "description": "View all conversations",
          "pathParams": [],
          "uri": "/api/v1/conversations",
          "url": "https://docs.joinmastodon.org/methods/conversations/#get",
          "formParams": [],
          "returns": "Conversation",
          "queryParams": [
            {
              "description": "Maximum number of results to return. Defaults to 20 conversations. Max 40 conversations.",
              "type": "integer",
              "required": 0,
              "name": "limit",
              "nullable": 0
            }
          ],
          "name": "get",
          "namespace": "conversations",
          "method": "GET",
          "returnsArray": 1
        },
        "read": {
          "url": "https://docs.joinmastodon.org/methods/conversations/#read",
          "name": "read",
          "formParams": [],
          "queryParams": [],
          "returns": "Conversation",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Conversation in the database.",
              "name": "id",
              "nullable": 0,
              "required": 1
            }
          ],
          "uri": "/api/v1/conversations/:id/read",
          "description": "Mark a conversation as read",
          "returnsArray": null,
          "namespace": "conversations",
          "method": "POST"
        },
        "delete": {
          "namespace": "conversations",
          "method": "DELETE",
          "returnsArray": null,
          "description": "Remove a conversation",
          "url": "https://docs.joinmastodon.org/methods/conversations/#delete",
          "returns": "EmptyOrUnknown",
          "formParams": [],
          "queryParams": [],
          "name": "delete",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the Conversation in the database."
            }
          ],
          "uri": "/api/v1/conversations/:id"
        }
      }
    },
    "admin": {
      "namespaces": {
        "admin::ip_blocks": {
          "methods": {
            "get": {
              "returnsArray": 1,
              "namespace": "admin::ip_blocks",
              "method": "GET",
              "uri": "/api/v1/admin/ip_blocks",
              "pathParams": [],
              "queryParams": [
                {
                  "nullable": 0,
                  "name": "limit",
                  "required": 0,
                  "type": "integer",
                  "description": "Maximum number of results to return. Defaults to 100 blocks. Max 200 blocks."
                }
              ],
              "formParams": [],
              "returns": "Admin::IpBlock",
              "name": "get",
              "url": "https://docs.joinmastodon.org/methods/ip_blocks/#get",
              "description": "List all IP blocks"
            },
            "get-one": {
              "method": "GET",
              "namespace": "admin::ip_blocks",
              "returnsArray": null,
              "description": "Get a single IP block",
              "url": "https://docs.joinmastodon.org/methods/ip_blocks/#get-one",
              "formParams": [],
              "queryParams": [],
              "name": "get-one",
              "returns": "Admin::IpBlock",
              "pathParams": [
                {
                  "nullable": 0,
                  "name": "id",
                  "required": 1,
                  "type": "string",
                  "description": "The ID of the IpBlock in the database."
                }
              ],
              "uri": "/api/v1/admin/ip_blocks/:id"
            },
            "delete": {
              "returnsArray": null,
              "namespace": "admin::ip_blocks",
              "method": "DELETE",
              "formParams": [],
              "queryParams": [],
              "name": "delete",
              "returns": "Admin::IpBlock",
              "url": "https://docs.joinmastodon.org/methods/ip_blocks/#delete",
              "uri": "/api/v1/admin/ip_blocks/:id",
              "pathParams": [
                {
                  "required": 1,
                  "nullable": 0,
                  "name": "id",
                  "description": "The ID of the DomainAllow in the database.",
                  "type": "string"
                }
              ],
              "description": "Delete an IP block"
            },
            "create": {
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::ip_blocks",
              "queryParams": [],
              "formParams": [
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "ip",
                  "description": "The IP address and prefix to block. Defaults to `0.0.0.0/32`",
                  "type": "string"
                },
                {
                  "type": "string",
                  "description": "The policy to apply to this IP range: `sign_up_requires_approval`, `sign_up_block`, or `no_access`",
                  "nullable": 0,
                  "name": "severity",
                  "required": 1
                },
                {
                  "description": "The reason for this IP block.",
                  "type": "string",
                  "required": 0,
                  "nullable": 0,
                  "name": "comment"
                },
                {
                  "description": "The number of seconds in which this IP block will expire.",
                  "type": "integer",
                  "required": 0,
                  "name": "expires_in",
                  "nullable": 0
                }
              ],
              "name": "create",
              "returns": "Admin::IpBlock",
              "url": "https://docs.joinmastodon.org/methods/ip_blocks/#create",
              "uri": "/api/v1/admin/ip_blocks",
              "pathParams": [],
              "description": "Block an IP address range from signing up"
            },
            "update": {
              "url": "https://docs.joinmastodon.org/methods/ip_blocks/#update",
              "name": "update",
              "formParams": [
                {
                  "nullable": 0,
                  "name": "ip",
                  "required": 0,
                  "type": "string",
                  "description": "The IP address and prefix to block. Defaults to `0.0.0.0/32`"
                },
                {
                  "type": "string",
                  "description": "The policy to apply to this IP range: `sign_up_requires_approval`, `sign_up_block`, or `no_access`",
                  "name": "severity",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "description": "The reason for this IP block.",
                  "type": "string",
                  "required": 0,
                  "name": "comment",
                  "nullable": 0
                },
                {
                  "description": "The number of seconds in which this IP block will expire.",
                  "type": "integer",
                  "required": 0,
                  "nullable": 0,
                  "name": "expires_in"
                }
              ],
              "queryParams": [],
              "returns": "Admin::IpBlock",
              "pathParams": [
                {
                  "required": 1,
                  "nullable": 0,
                  "name": "id",
                  "description": "The ID of the IpBlock in the database.",
                  "type": "string"
                }
              ],
              "uri": "/api/v1/admin/ip_blocks/:id",
              "description": "Update a domain block",
              "returnsArray": null,
              "method": "PUT",
              "namespace": "admin::ip_blocks"
            }
          },
          "url": "https://docs.joinmastodon.org/methods/ip_blocks/",
          "description": "Disallow certain IP address ranges from signing up."
        },
        "admin::domain_allows": {
          "description": "Allow certain domains to federate.",
          "methods": {
            "delete": {
              "returnsArray": null,
              "namespace": "admin::domain_allows",
              "method": "DELETE",
              "url": "https://docs.joinmastodon.org/methods/domain_allows/#delete",
              "name": "delete",
              "formParams": [],
              "queryParams": [],
              "returns": "Admin::DomainAllow",
              "pathParams": [
                {
                  "name": "id",
                  "nullable": 0,
                  "required": 1,
                  "type": "string",
                  "description": "The ID of the DomainAllow in the database."
                }
              ],
              "uri": "/api/v1/admin/domain_allows/:id",
              "description": "Delete an allowed domain"
            },
            "create": {
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::domain_allows",
              "url": "https://docs.joinmastodon.org/methods/domain_allows/#create",
              "queryParams": [],
              "formParams": [
                {
                  "description": "The domain to allow federation with.",
                  "type": "string",
                  "required": 1,
                  "nullable": 0,
                  "name": "domain"
                }
              ],
              "name": "create",
              "returns": "Admin::DomainAllow",
              "pathParams": [],
              "uri": "/api/v1/admin/domain_allows",
              "description": "Allow a domain to federate"
            },
            "get-one": {
              "returnsArray": null,
              "namespace": "admin::domain_allows",
              "method": "GET",
              "formParams": [],
              "queryParams": [],
              "name": "get-one",
              "returns": "Admin::DomainAllow",
              "url": "https://docs.joinmastodon.org/methods/domain_allows/#get-one",
              "uri": "/api/v1/admin/domain_allows/:id",
              "pathParams": [
                {
                  "required": 1,
                  "name": "id",
                  "nullable": 0,
                  "description": "The ID of the DomainAllow in the database.",
                  "type": "string"
                }
              ],
              "description": "Get a single allowed domain"
            },
            "get": {
              "description": "List all allowed domains",
              "pathParams": [],
              "uri": "/api/v1/admin/domain_allows",
              "url": "https://docs.joinmastodon.org/methods/domain_allows/#get",
              "name": "get",
              "formParams": [],
              "queryParams": [
                {
                  "required": 0,
                  "name": "limit",
                  "nullable": 0,
                  "description": "Maximum number of results to return. Defaults to 100 allows. Max 200 allows.",
                  "type": "integer"
                }
              ],
              "returns": "Admin::DomainAllow",
              "namespace": "admin::domain_allows",
              "method": "GET",
              "returnsArray": 1
            }
          },
          "url": "https://docs.joinmastodon.org/methods/domain_allows/"
        },
        "admin::measures": {
          "url": "https://docs.joinmastodon.org/methods/measures/",
          "methods": {
            "get": {
              "description": "Get measurable data",
              "pathParams": [],
              "uri": "/api/v1/admin/measures",
              "url": "https://docs.joinmastodon.org/methods/measures/#get",
              "name": "get",
              "formParams": [
                {
                  "required": 1,
                  "nullable": 0,
                  "name": "keys[]",
                  "description": "Request specific measures by their keystring. Supported measures include:",
                  "type": "array<String>"
                },
                {
                  "type": "datetime",
                  "description": "The start date for the time period. If a time is provided, it will be ignored.",
                  "name": "start_at",
                  "nullable": 0,
                  "required": 1
                },
                {
                  "description": "The end date for the time period. If a time is provided, it will be ignored.",
                  "type": "datetime",
                  "required": 1,
                  "name": "end_at",
                  "nullable": 0
                },
                {
                  "required": 0,
                  "nullable": 1,
                  "name": "tag_accounts",
                  "description": "tag_accounts[id]: When `tag_accounts` is one of the requested keys, you must provide a tag ID to obtain the measure of how many accounts used that hashtag in at least one status within the given time period.",
                  "type": "array"
                },
                {
                  "nullable": 1,
                  "name": "tag_uses",
                  "required": 0,
                  "type": "array",
                  "description": "tag_uses[id]: When `tag_uses` is one of the requested keys, you must provide a tag ID to obtain the measure of how many statuses used that hashtag within the given time period."
                },
                {
                  "required": 0,
                  "nullable": 1,
                  "name": "tag_servers",
                  "description": "tag_servers[id]: When `tag_servers` is one of the requested keys, you must provide a tag ID to obtain the measure of how many servers used that hashtag in at least one status within the given time period.",
                  "type": "array"
                },
                {
                  "nullable": 1,
                  "name": "instance_accounts",
                  "required": 0,
                  "type": "array",
                  "description": "instance_accounts[domain]: When `instance_accounts` is one of the requested keys, you must provide a remote domain to obtain the measure of how many accounts have been discovered from that server within the given time period."
                },
                {
                  "required": 0,
                  "nullable": 1,
                  "name": "instance_media_attachments",
                  "description": "instance_media_attachments[domain]: When `instance_media_attachments` is one of the requested keys, you must provide a remote domain to obtain the measure of how much space is used by media attachments from that server within the given time period.",
                  "type": "array"
                },
                {
                  "type": "array",
                  "description": "instance_reports[domain]: When `instance_reports` is one of the requested keys, you must provide a remote domain to obtain the measure of how many reports have been filed against accounts from that server within the given time period.",
                  "name": "instance_reports",
                  "nullable": 1,
                  "required": 0
                },
                {
                  "name": "instance_statuses",
                  "nullable": 1,
                  "required": 0,
                  "type": "array",
                  "description": "instance_statuses[domain]: When `instance_statuses` is one of the requested keys, you must provide a remote domain to obtain the measure of how many statuses originate from that server within the given time period."
                },
                {
                  "name": "instance_follows",
                  "nullable": 1,
                  "required": 0,
                  "type": "array",
                  "description": "instance_follows[domain]: When `instance_follows` is one of the requested keys, you must provide a remote domain to obtain the measure of how many follows were performed on accounts from that server by local accounts within the given time period."
                },
                {
                  "type": "array",
                  "description": "instance_followers[domain]: When `instance_followers` is one of the requested keys, you must provide a remote domain to obtain the measure of how many follows were performed by accounts from that server on local accounts within the given time period.",
                  "nullable": 1,
                  "name": "instance_followers",
                  "required": 0
                }
              ],
              "queryParams": [],
              "returns": "Admin::Measure",
              "namespace": "admin::measures",
              "method": "POST",
              "returnsArray": 1
            }
          },
          "description": "Obtain quantitative metrics about the server."
        },
        "admin::retention": {
          "methods": {
            "create": {
              "description": "Calculate retention data",
              "pathParams": [],
              "uri": "/api/v1/admin/retention",
              "url": "https://docs.joinmastodon.org/methods/retention/#create",
              "name": "create",
              "formParams": [
                {
                  "name": "start_at",
                  "nullable": 0,
                  "required": 1,
                  "type": "datetime",
                  "description": "The start date for the time period. If a time is provided, it will be ignored."
                },
                {
                  "required": 1,
                  "nullable": 0,
                  "name": "end_at",
                  "description": "The end date for the time period. If a time is provided, it will be ignored.",
                  "type": "datetime"
                },
                {
                  "name": "frequency",
                  "nullable": 0,
                  "required": 1,
                  "type": "string",
                  "description": "Specify whether to use `day` or `month` buckets. If any other value is provided, defaults to `day`."
                }
              ],
              "queryParams": [],
              "returns": "Admin::Cohort",
              "method": "POST",
              "namespace": "admin::retention",
              "returnsArray": 1
            }
          },
          "url": "https://docs.joinmastodon.org/methods/retention/",
          "description": "Show retention data over time."
        },
        "admin::trends": {
          "description": "TODO",
          "url": "https://docs.joinmastodon.org/methods/trends/",
          "methods": {
            "statuses": {
              "returnsArray": 1,
              "namespace": "admin::trends",
              "method": "GET",
              "uri": "/api/v1/admin/trends/statuses",
              "pathParams": [],
              "formParams": [],
              "returns": "Status",
              "queryParams": [],
              "name": "statuses",
              "url": "https://docs.joinmastodon.org/methods/trends/#statuses",
              "description": "View trending statuses"
            },
            "tags": {
              "namespace": "admin::trends",
              "method": "GET",
              "returnsArray": 1,
              "description": "View trending tags",
              "uri": "/api/v1/admin/trends/tags",
              "pathParams": [],
              "returns": "Admin::Tag",
              "formParams": [],
              "queryParams": [],
              "name": "tags",
              "url": "https://docs.joinmastodon.org/methods/trends/#tags"
            },
            "links": {
              "returnsArray": 1,
              "namespace": "admin::trends",
              "method": "GET",
              "url": "https://docs.joinmastodon.org/methods/trends/#links",
              "name": "links",
              "formParams": [],
              "queryParams": [],
              "returns": "Trends::Link",
              "pathParams": [],
              "uri": "/api/v1/admin/trends/links",
              "description": "View trending links"
            }
          }
        },
        "admin::accounts": {
          "url": "https://docs.joinmastodon.org/methods/accounts/",
          "methods": {
            "v1": {
              "uri": "/api/v1/admin/accounts",
              "pathParams": [],
              "formParams": [],
              "name": "v1",
              "queryParams": [
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "local",
                  "description": "Filter for local accounts?",
                  "type": "boolean"
                },
                {
                  "description": "Filter for remote accounts?",
                  "type": "boolean",
                  "required": 0,
                  "name": "remote",
                  "nullable": 0
                },
                {
                  "description": "Filter for currently active accounts?",
                  "type": "boolean",
                  "required": 0,
                  "nullable": 0,
                  "name": "active"
                },
                {
                  "nullable": 0,
                  "name": "pending",
                  "required": 0,
                  "type": "boolean",
                  "description": "Filter for currently pending accounts?"
                },
                {
                  "type": "boolean",
                  "description": "Filter for currently disabled accounts?",
                  "name": "disabled",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "nullable": 0,
                  "name": "silenced",
                  "required": 0,
                  "type": "boolean",
                  "description": "Filter for currently silenced accounts?"
                },
                {
                  "type": "boolean",
                  "description": "Filter for currently suspended accounts?",
                  "nullable": 0,
                  "name": "suspended",
                  "required": 0
                },
                {
                  "type": "boolean",
                  "description": "Filter for accounts force-marked as sensitive?",
                  "nullable": 0,
                  "name": "sensitized",
                  "required": 0
                },
                {
                  "description": "Search for the given username",
                  "type": "string",
                  "required": 0,
                  "name": "username",
                  "nullable": 0
                },
                {
                  "nullable": 0,
                  "name": "display_name",
                  "required": 0,
                  "type": "string",
                  "description": "Search for the given display name"
                },
                {
                  "name": "by_domain",
                  "nullable": 0,
                  "required": 0,
                  "type": "string",
                  "description": "Filter by the given domain"
                },
                {
                  "required": 0,
                  "name": "email",
                  "nullable": 0,
                  "description": "Lookup a user with this email",
                  "type": "string"
                },
                {
                  "description": "Lookup users with this IP address",
                  "type": "string",
                  "required": 0,
                  "nullable": 0,
                  "name": "ip"
                },
                {
                  "required": 0,
                  "name": "staff",
                  "nullable": 0,
                  "description": "Filter for staff accounts?",
                  "type": "boolean"
                },
                {
                  "required": 0,
                  "name": "max_id ",
                  "nullable": 0,
                  "description": "Return results older than ID.",
                  "type": "string"
                },
                {
                  "name": "since_id",
                  "nullable": 0,
                  "required": 0,
                  "type": "string",
                  "description": "Return results newer than ID."
                },
                {
                  "description": "Return results immediately newer than ID.",
                  "type": "string",
                  "required": 0,
                  "name": "min_id",
                  "nullable": 0
                },
                {
                  "description": "Maximum number of results to return. Defaults to 100 accounts. Max 200 accounts.",
                  "type": "integer",
                  "required": 0,
                  "name": "limit",
                  "nullable": 0
                }
              ],
              "returns": "Admin::Account",
              "url": "https://docs.joinmastodon.org/methods/accounts/#v1",
              "description": "View accounts (v1)",
              "returnsArray": 1,
              "method": "GET",
              "namespace": "admin::accounts"
            },
            "v2": {
              "description": "View accounts (v2)",
              "uri": "/api/v2/admin/accounts",
              "pathParams": [],
              "formParams": [],
              "queryParams": [
                {
                  "type": "string",
                  "description": "Filter for `local` or `remote` accounts.",
                  "nullable": 0,
                  "name": "origin",
                  "required": 0
                },
                {
                  "description": "Filter for `active`, `pending`, `disabled`, `silenced`, or `suspended` accounts.",
                  "type": "string",
                  "required": 0,
                  "nullable": 0,
                  "name": "status"
                },
                {
                  "type": "string",
                  "description": "Filter for accounts with `staff` permissions (users that can manage reports).",
                  "name": "permissions",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "type": "array<String>",
                  "description": "Filter for users with these roles.",
                  "name": "role_ids[]",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "invited_by",
                  "description": "Lookup users invited by the account with this ID.",
                  "type": "string"
                },
                {
                  "type": "string",
                  "description": "Search for the given username.",
                  "name": "username",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "type": "string",
                  "description": "Search for the given display name.",
                  "nullable": 0,
                  "name": "display_name",
                  "required": 0
                },
                {
                  "type": "string",
                  "description": "Filter by the given domain.",
                  "nullable": 0,
                  "name": "by_domain",
                  "required": 0
                },
                {
                  "type": "string",
                  "description": "Lookup a user with this email.",
                  "name": "email",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "type": "string",
                  "description": "Lookup users with this IP address.",
                  "name": "ip",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "type": "string",
                  "description": "Return results older than ID.",
                  "name": "max_id ",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "name": "since_id",
                  "nullable": 0,
                  "required": 0,
                  "type": "string",
                  "description": "Return results newer than ID."
                },
                {
                  "description": "Return results immediately newer than ID.",
                  "type": "string",
                  "required": 0,
                  "name": "min_id",
                  "nullable": 0
                },
                {
                  "description": "Maximum number of results to return. Defaults to 100 accounts. Max 200 accounts.",
                  "type": "integer",
                  "required": 0,
                  "nullable": 0,
                  "name": "limit"
                }
              ],
              "returns": "Admin::Account",
              "name": "v2",
              "url": "https://docs.joinmastodon.org/methods/accounts/#v2",
              "namespace": "admin::accounts",
              "method": "GET",
              "returnsArray": 1
            },
            "unsilence": {
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::accounts",
              "pathParams": [
                {
                  "type": "string",
                  "description": "The ID of the Account in the database.",
                  "name": "id",
                  "nullable": 0,
                  "required": 1
                }
              ],
              "uri": "/api/v1/admin/accounts/:id/unsilence",
              "url": "https://docs.joinmastodon.org/methods/accounts/#unsilence",
              "formParams": [],
              "name": "unsilence",
              "queryParams": [],
              "returns": "Admin::Account",
              "description": "Unsilence an account"
            },
            "unsuspend": {
              "description": "Unsuspend an account",
              "uri": "/api/v1/admin/accounts/:id/unsuspend",
              "pathParams": [
                {
                  "type": "string",
                  "description": "The ID of the Account in the database.",
                  "name": "id",
                  "nullable": 0,
                  "required": 1
                }
              ],
              "returns": "Admin::Account",
              "formParams": [],
              "queryParams": [],
              "name": "unsuspend",
              "url": "https://docs.joinmastodon.org/methods/accounts/#unsuspend",
              "namespace": "admin::accounts",
              "method": "POST",
              "returnsArray": null
            },
            "action": {
              "returnsArray": null,
              "namespace": "admin::accounts",
              "method": "POST",
              "uri": "/api/v1/admin/accounts/:id/action",
              "pathParams": [
                {
                  "description": "The ID of the Account in the database.",
                  "type": "string",
                  "required": 1,
                  "name": "id",
                  "nullable": 0
                }
              ],
              "queryParams": [],
              "formParams": [
                {
                  "type": "string",
                  "description": "The type of action to be taken: `none`, `sensitive`, `disable`, `silence`, or `suspend`.",
                  "name": "type",
                  "nullable": 0,
                  "required": 1
                },
                {
                  "nullable": 0,
                  "name": "report_id",
                  "required": 0,
                  "type": "string",
                  "description": "The ID of an associated report that caused this action to be taken."
                },
                {
                  "type": "string",
                  "description": "The ID of a preset warning.",
                  "name": "warning_preset_id",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "text",
                  "description": "Additional clarification for why this action was taken.",
                  "type": "string"
                },
                {
                  "nullable": 0,
                  "name": "send_email_notification",
                  "required": 0,
                  "type": "boolean",
                  "description": "Should an email be sent to the user with the above information?"
                }
              ],
              "returns": "EmptyOrUnknown",
              "name": "action",
              "url": "https://docs.joinmastodon.org/methods/accounts/#action",
              "description": "Perform an action against an account"
            },
            "delete": {
              "pathParams": [
                {
                  "type": "string",
                  "description": "The ID of the Account in the database.",
                  "name": "id",
                  "nullable": 0,
                  "required": 1
                }
              ],
              "uri": "/api/v1/admin/accounts/:id",
              "url": "https://docs.joinmastodon.org/methods/accounts/#delete",
              "returns": "Admin::Account",
              "formParams": [],
              "queryParams": [],
              "name": "delete",
              "description": "Delete an account",
              "returnsArray": null,
              "method": "DELETE",
              "namespace": "admin::accounts"
            },
            "unsensitive": {
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::accounts",
              "pathParams": [
                {
                  "description": "The ID of the Account in the database.",
                  "type": "string",
                  "required": 1,
                  "name": "id",
                  "nullable": 0
                }
              ],
              "uri": "/api/v1/admin/accounts/:id/unsensitive",
              "url": "https://docs.joinmastodon.org/methods/accounts/#unsensitive",
              "formParams": [],
              "name": "unsensitive",
              "queryParams": [],
              "returns": "Admin::Account",
              "description": "Unmark an account as sensitive"
            },
            "approve": {
              "returnsArray": null,
              "namespace": "admin::accounts",
              "method": "POST",
              "pathParams": [
                {
                  "type": "string",
                  "description": "The ID of the Account in the database.",
                  "name": "id",
                  "nullable": 0,
                  "required": 1
                }
              ],
              "uri": "/api/v1/admin/accounts/:id/approve",
              "url": "https://docs.joinmastodon.org/methods/accounts/#approve",
              "returns": "Admin::Account",
              "formParams": [],
              "queryParams": [],
              "name": "approve",
              "description": "Approve a pending account"
            },
            "reject": {
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::accounts",
              "formParams": [],
              "name": "reject",
              "queryParams": [],
              "returns": "Admin::Account",
              "url": "https://docs.joinmastodon.org/methods/accounts/#reject",
              "uri": "/api/v1/admin/accounts/:id/reject",
              "pathParams": [
                {
                  "description": "The ID of the Account in the database.",
                  "type": "string",
                  "required": 1,
                  "name": "id",
                  "nullable": 0
                }
              ],
              "description": "Reject a pending account"
            },
            "get-one": {
              "url": "https://docs.joinmastodon.org/methods/accounts/#get-one",
              "returns": "Admin::Account",
              "formParams": [],
              "queryParams": [],
              "name": "get-one",
              "pathParams": [
                {
                  "description": "The ID of the Account in the database.",
                  "type": "string",
                  "required": 1,
                  "name": "id",
                  "nullable": 0
                }
              ],
              "uri": "/api/v1/admin/accounts/:id",
              "description": "View a specific account",
              "returnsArray": null,
              "namespace": "admin::accounts",
              "method": "GET"
            },
            "enable": {
              "description": "Enable a currently disabled account",
              "url": "https://docs.joinmastodon.org/methods/accounts/#enable",
              "formParams": [],
              "name": "enable",
              "queryParams": [],
              "returns": "Admin::Account",
              "pathParams": [
                {
                  "required": 1,
                  "name": "id",
                  "nullable": 0,
                  "description": "The ID of the Account in the database.",
                  "type": "string"
                }
              ],
              "uri": "/api/v1/admin/accounts/:id/enable",
              "namespace": "admin::accounts",
              "method": "POST",
              "returnsArray": null
            }
          },
          "description": "Perform moderation actions with accounts."
        },
        "admin::reports": {
          "description": "Perform moderation actions with reports.",
          "url": "https://docs.joinmastodon.org/methods/reports/",
          "methods": {
            "reopen": {
              "description": "Reopen a closed report",
              "formParams": [],
              "returns": "Admin::Report",
              "queryParams": [],
              "name": "reopen",
              "url": "https://docs.joinmastodon.org/methods/reports/#reopen",
              "uri": "/api/v1/admin/reports/:id/reopen",
              "pathParams": [
                {
                  "required": 1,
                  "name": "id",
                  "nullable": 0,
                  "description": "The ID of the Report in the database.",
                  "type": "string"
                }
              ],
              "namespace": "admin::reports",
              "method": "POST",
              "returnsArray": null
            },
            "resolve": {
              "returnsArray": null,
              "namespace": "admin::reports",
              "method": "POST",
              "uri": "/api/v1/admin/reports/:id/resolve",
              "pathParams": [
                {
                  "nullable": 0,
                  "name": "id",
                  "required": 1,
                  "type": "string",
                  "description": "The ID of the Report in the database."
                }
              ],
              "returns": "Admin::Report",
              "formParams": [],
              "queryParams": [],
              "name": "resolve",
              "url": "https://docs.joinmastodon.org/methods/reports/#resolve",
              "description": "Mark report as resolved"
            },
            "assign_to_self": {
              "returns": "Admin::Report",
              "formParams": [],
              "queryParams": [],
              "name": "assign_to_self",
              "url": "https://docs.joinmastodon.org/methods/reports/#assign_to_self",
              "uri": "/api/v1/admin/reports/:id/assign_to_self",
              "pathParams": [
                {
                  "required": 1,
                  "nullable": 0,
                  "name": "id",
                  "description": "The ID of the Report in the database.",
                  "type": "string"
                }
              ],
              "description": "Assign report to self",
              "returnsArray": null,
              "namespace": "admin::reports",
              "method": "POST"
            },
            "unassign": {
              "namespace": "admin::reports",
              "method": "POST",
              "returnsArray": null,
              "description": "Unassign report",
              "pathParams": [
                {
                  "required": 1,
                  "nullable": 0,
                  "name": "id",
                  "description": "The ID of the Report in the database.",
                  "type": "string"
                }
              ],
              "uri": "/api/v1/admin/reports/:id/unassign",
              "url": "https://docs.joinmastodon.org/methods/reports/#unassign",
              "formParams": [],
              "queryParams": [],
              "name": "unassign",
              "returns": "Admin::Report"
            },
            "get": {
              "returnsArray": 1,
              "method": "GET",
              "namespace": "admin::reports",
              "formParams": [],
              "name": "get",
              "queryParams": [
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "resolved",
                  "description": "Filter for resolved reports?",
                  "type": "boolean"
                },
                {
                  "nullable": 0,
                  "name": "account_id",
                  "required": 0,
                  "type": "string",
                  "description": "Filter for reports filed by this account."
                },
                {
                  "type": "string",
                  "description": "Filter for reports targeting this account.",
                  "name": "target_account_id",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "limit",
                  "description": "Maximum number of results to return. Defaults to 100 reports. Max 200 reports.",
                  "type": "integer"
                }
              ],
              "returns": "Admin::Report",
              "url": "https://docs.joinmastodon.org/methods/reports/#get",
              "uri": "/api/v1/admin/reports",
              "pathParams": [],
              "description": "View all reports"
            },
            "get-one": {
              "returnsArray": null,
              "namespace": "admin::reports",
              "method": "GET",
              "url": "https://docs.joinmastodon.org/methods/reports/#get-one",
              "queryParams": [],
              "formParams": [],
              "returns": "Admin::Report",
              "name": "get-one",
              "pathParams": [
                {
                  "name": "id",
                  "nullable": 0,
                  "required": 1,
                  "type": "string",
                  "description": "The ID of the Report in the database."
                }
              ],
              "uri": "/api/v1/admin/reports/:id",
              "description": "View a single report"
            },
            "update": {
              "description": "Update a report",
              "pathParams": [
                {
                  "description": "The ID of the Report in the database.",
                  "type": "string",
                  "required": 1,
                  "nullable": 0,
                  "name": "id"
                }
              ],
              "uri": "/api/v1/admin/reports/:id",
              "url": "https://docs.joinmastodon.org/methods/reports/#update",
              "name": "update",
              "formParams": [
                {
                  "description": "Change the classification of the report to `spam`, `violation`, or `other`.",
                  "type": "string",
                  "required": 0,
                  "name": "category",
                  "nullable": 0
                },
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "rule_ids[]",
                  "description": "For `violation` category reports, specify the ID of the exact rules broken. Rules and their IDs are available via [GET /api/v1/instance/rules]({{< relref \"methods/instance#rules\" >}}) and [GET /api/v1/instance]({{< relref \"methods/instance#get\" >}}).",
                  "type": "array<Integer>"
                }
              ],
              "queryParams": [],
              "returns": "Admin::Report",
              "method": "PUT",
              "namespace": "admin::reports",
              "returnsArray": null
            }
          }
        },
        "admin::domain_blocks": {
          "description": "Disallow certain domains to federate.",
          "methods": {
            "get": {
              "uri": "/api/v1/admin/domain_blocks",
              "pathParams": [],
              "returns": "Admin::DomainBlock",
              "formParams": [],
              "queryParams": [
                {
                  "name": "limit",
                  "nullable": 0,
                  "required": 0,
                  "type": "integer",
                  "description": "Maximum number of results to return. Defaults to 100 blocks. Max 200 blocks."
                }
              ],
              "name": "get",
              "url": "https://docs.joinmastodon.org/methods/domain_blocks/#get",
              "description": "List all blocked domains",
              "returnsArray": 1,
              "method": "GET",
              "namespace": "admin::domain_blocks"
            },
            "get-one": {
              "returnsArray": null,
              "namespace": "admin::domain_blocks",
              "method": "GET",
              "pathParams": [
                {
                  "name": "id",
                  "nullable": 0,
                  "required": 1,
                  "type": "string",
                  "description": "The ID of the DomainBlock in the database."
                }
              ],
              "uri": "/api/v1/admin/domain_blocks/:id",
              "url": "https://docs.joinmastodon.org/methods/domain_blocks/#get-one",
              "name": "get-one",
              "formParams": [],
              "queryParams": [],
              "returns": "Admin::DomainBlock",
              "description": "Get a single blocked domain"
            },
            "create": {
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::domain_blocks",
              "formParams": [
                {
                  "nullable": 0,
                  "name": "domain",
                  "required": 1,
                  "type": "string",
                  "description": "The domain to block federation with."
                },
                {
                  "type": "string",
                  "description": "Whether to apply a `silence`, `suspend`, or `noop` to the domain. Defaults to `silence`",
                  "nullable": 0,
                  "name": "severity",
                  "required": 0
                },
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "reject_media",
                  "description": "Whether media attachments should be rejected. Defaults to false",
                  "type": "boolean"
                },
                {
                  "type": "boolean",
                  "description": "Whether reports from this domain should be rejected. Defaults to false",
                  "name": "reject_reports",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "description": "A private note about this domain block, visible only to admins.",
                  "type": "string",
                  "required": 0,
                  "name": "private_comment",
                  "nullable": 0
                },
                {
                  "nullable": 0,
                  "name": "public_comment",
                  "required": 0,
                  "type": "string",
                  "description": "A public note about this domain block, optionally shown on the about page."
                },
                {
                  "type": "boolean",
                  "description": "Whether to partially censor the domain when shown in public. Defaults to false",
                  "name": "obfuscate",
                  "nullable": 0,
                  "required": 0
                }
              ],
              "queryParams": [],
              "returns": "Admin::DomainBlock",
              "name": "create",
              "url": "https://docs.joinmastodon.org/methods/domain_blocks/#create",
              "uri": "/api/v1/admin/domain_blocks",
              "pathParams": [],
              "description": "Block a domain from federating"
            },
            "delete": {
              "returnsArray": null,
              "namespace": "admin::domain_blocks",
              "method": "DELETE",
              "pathParams": [
                {
                  "required": 1,
                  "name": "id",
                  "nullable": 0,
                  "description": "The ID of the DomainAllow in the database.",
                  "type": "string"
                }
              ],
              "uri": "/api/v1/admin/domain_blocks/:id",
              "url": "https://docs.joinmastodon.org/methods/domain_blocks/#delete",
              "formParams": [],
              "name": "delete",
              "queryParams": [],
              "returns": "Admin::DomainBlock",
              "description": "Remove a domain block"
            },
            "update": {
              "returnsArray": null,
              "method": "PUT",
              "namespace": "admin::domain_blocks",
              "url": "https://docs.joinmastodon.org/methods/domain_blocks/#update",
              "formParams": [
                {
                  "required": 0,
                  "name": "severity",
                  "nullable": 0,
                  "description": "Whether to apply a `silence`, `suspend`, or `noop` to the domain. Defaults to `silence`",
                  "type": "string"
                },
                {
                  "nullable": 0,
                  "name": "reject_media",
                  "required": 0,
                  "type": "boolean",
                  "description": "Whether media attachments should be rejected. Defaults to false"
                },
                {
                  "type": "boolean",
                  "description": "Whether reports from this domain should be rejected. Defaults to false",
                  "nullable": 0,
                  "name": "reject_reports",
                  "required": 0
                },
                {
                  "name": "private_comment",
                  "nullable": 0,
                  "required": 0,
                  "type": "string",
                  "description": "A private note about this domain block, visible only to admins."
                },
                {
                  "type": "string",
                  "description": "A public note about this domain block, optionally shown on the about page.",
                  "name": "public_comment",
                  "nullable": 0,
                  "required": 0
                },
                {
                  "required": 0,
                  "name": "obfuscate",
                  "nullable": 0,
                  "description": "Whether to partially censor the domain when shown in public. Defaults to false",
                  "type": "boolean"
                }
              ],
              "queryParams": [],
              "name": "update",
              "returns": "Admin::DomainBlock",
              "pathParams": [
                {
                  "name": "id",
                  "nullable": 0,
                  "required": 1,
                  "type": "string",
                  "description": "The ID of the DomainAllow in the database."
                }
              ],
              "uri": "/api/v1/admin/domain_blocks/:id",
              "description": "Update a domain block"
            }
          },
          "url": "https://docs.joinmastodon.org/methods/domain_blocks/"
        },
        "admin::dimensions": {
          "methods": {
            "get": {
              "method": "POST",
              "namespace": "admin::dimensions",
              "returnsArray": 1,
              "description": "Get dimensional data",
              "url": "https://docs.joinmastodon.org/methods/dimensions/#get",
              "queryParams": [],
              "formParams": [
                {
                  "name": "keys[]",
                  "nullable": 0,
                  "required": 1,
                  "type": "array<String>",
                  "description": "Request specific dimensions by their keystring. Supported dimensions include:"
                },
                {
                  "name": "start_at",
                  "nullable": 0,
                  "required": 0,
                  "type": "datetime",
                  "description": "The start date for the time period. If a time is provided, it will be ignored."
                },
                {
                  "required": 0,
                  "nullable": 0,
                  "name": "end_at",
                  "description": "The end date for the time period. If a time is provided, it will be ignored.",
                  "type": "datetime"
                },
                {
                  "description": "The maximum number of results to return for sources, servers, languages, tag or instance dimensions.",
                  "type": "integer",
                  "required": 0,
                  "name": "limit",
                  "nullable": 0
                },
                {
                  "type": "array",
                  "description": "tag_servers[id]: When `tag_servers` is one of the requested keys, you must provide a trending tag ID to obtain information about which servers are posting the tag.",
                  "name": "tag_servers",
                  "nullable": 1,
                  "required": 0
                },
                {
                  "required": 0,
                  "name": "tag_languages",
                  "nullable": 1,
                  "description": "tag_languages[id]: When `tag_languages` is one of the requested keys, you must provide a trending tag ID to obtain information about which languages are posting the tag.",
                  "type": "array"
                },
                {
                  "required": 0,
                  "name": "instance_accounts",
                  "nullable": 1,
                  "description": "instance_accounts[domain]: When `instance_accounts` is one of the requested keys, you must provide a domain to obtain information about popular accounts from that server.",
                  "type": "array"
                },
                {
                  "required": 0,
                  "name": "instance_languages",
                  "nullable": 1,
                  "description": "instance_languages[domain]: When `instance_accounts` is one of the requested keys, you must provide a domain to obtain information about popular languages from that server.",
                  "type": "array"
                }
              ],
              "returns": "Admin::Dimension",
              "name": "get",
              "pathParams": [],
              "uri": "/api/v1/admin/dimensions"
            }
          },
          "url": "https://docs.joinmastodon.org/methods/dimensions/",
          "description": "Obtain qualitative metrics about the server."
        },
        "admin::canonical_email_blocks": {
          "description": "Block certain email addresses by their hash.",
          "methods": {
            "get-one": {
              "namespace": "admin::canonical_email_blocks",
              "method": "GET",
              "returnsArray": null,
              "description": "Show a single canonical email block",
              "uri": "/api/v1/admin/canonical_email_blocks/:id",
              "pathParams": [
                {
                  "description": "The ID of the Admin::CanonicalEmailBlock in the database.",
                  "type": "string",
                  "required": 1,
                  "nullable": 0,
                  "name": "id"
                }
              ],
              "formParams": [],
              "queryParams": [],
              "returns": "Admin::CanonicalEmailBlock",
              "name": "get-one",
              "url": "https://docs.joinmastodon.org/methods/canonical_email_blocks/#get-one"
            },
            "get": {
              "uri": "/api/v1/admin/canonical_email_blocks",
              "pathParams": [],
              "formParams": [],
              "name": "get",
              "queryParams": [
                {
                  "type": "integer",
                  "description": "Maximum number of results to return. Defaults to 100 blocks. Max 200 blocks.",
                  "name": "limit",
                  "nullable": 0,
                  "required": 0
                }
              ],
              "returns": "Admin::CanonicalEmailBlock",
              "url": "https://docs.joinmastodon.org/methods/canonical_email_blocks/#get",
              "description": "List all canonical email blocks",
              "returnsArray": 1,
              "namespace": "admin::canonical_email_blocks",
              "method": "GET"
            },
            "create": {
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::canonical_email_blocks",
              "pathParams": [],
              "uri": "/api/v1/admin/canonical_email_blocks",
              "url": "https://docs.joinmastodon.org/methods/canonical_email_blocks/#create",
              "formParams": [
                {
                  "description": "The email to canonicalize, hash, and block. If this parameter is provided, `canonical_email_hash` will be ignored.",
                  "type": "string",
                  "required": 1,
                  "nullable": 0,
                  "name": "email"
                },
                {
                  "description": "The hash to test against. If `email` is not provided, this parameter is required.",
                  "type": "string",
                  "required": 0,
                  "name": "canonical_email_hash",
                  "nullable": 0
                }
              ],
              "queryParams": [],
              "returns": "Admin::CanonicalEmailBlock",
              "name": "create",
              "description": "Block a canonical email"
            },
            "delete": {
              "formParams": [],
              "returns": "Admin::CanonicalEmailBlock",
              "queryParams": [],
              "name": "delete",
              "url": "https://docs.joinmastodon.org/methods/canonical_email_blocks/#delete",
              "uri": "/api/v1/admin/canonical_email_blocks/:id",
              "pathParams": [
                {
                  "required": 1,
                  "name": "id",
                  "nullable": 0,
                  "description": "The ID of the Admin::CanonicalEmailBlock in the database.",
                  "type": "string"
                }
              ],
              "description": "Delete a canonical email block",
              "returnsArray": null,
              "method": "DELETE",
              "namespace": "admin::canonical_email_blocks"
            },
            "test": {
              "namespace": "admin::canonical_email_blocks",
              "method": "POST",
              "returnsArray": 1,
              "description": "Test",
              "uri": "/api/v1/admin/canonical_email_blocks/test",
              "pathParams": [],
              "name": "test",
              "formParams": [
                {
                  "nullable": 0,
                  "name": "email",
                  "required": 1,
                  "type": "string",
                  "description": "The email to canonicalize and hash."
                }
              ],
              "queryParams": [],
              "returns": "Admin::CanonicalEmailBlock",
              "url": "https://docs.joinmastodon.org/methods/canonical_email_blocks/#test"
            }
          },
          "url": "https://docs.joinmastodon.org/methods/canonical_email_blocks/"
        },
        "admin::email_domain_blocks": {
          "description": "Disallow certain email domains from signing up.",
          "methods": {
            "get": {
              "description": "List all blocked email domains",
              "url": "https://docs.joinmastodon.org/methods/email_domain_blocks/#get",
              "formParams": [],
              "name": "get",
              "queryParams": [
                {
                  "type": "integer",
                  "description": "Maximum number of results to return. Defaults to 100 blocks. Max 200 blocks.",
                  "nullable": 0,
                  "name": "limit",
                  "required": 0
                }
              ],
              "returns": "Admin::EmailDomainBlock",
              "pathParams": [],
              "uri": "/api/v1/admin/email_domain_blocks",
              "namespace": "admin::email_domain_blocks",
              "method": "GET",
              "returnsArray": 1
            },
            "get-one": {
              "description": "Get a single blocked email domain",
              "pathParams": [
                {
                  "required": 1,
                  "name": "id",
                  "nullable": 0,
                  "description": "The ID of the DomainBlock in the database.",
                  "type": "string"
                }
              ],
              "uri": "/api/v1/admin/email_domain_blocks/:id",
              "url": "https://docs.joinmastodon.org/methods/email_domain_blocks/#get-one",
              "formParams": [],
              "queryParams": [],
              "returns": "Admin::EmailDomainBlock",
              "name": "get-one",
              "namespace": "admin::email_domain_blocks",
              "method": "GET",
              "returnsArray": null
            },
            "delete": {
              "returnsArray": null,
              "namespace": "admin::email_domain_blocks",
              "method": "DELETE",
              "formParams": [],
              "name": "delete",
              "queryParams": [],
              "returns": "Admin::EmailDomainBlock",
              "url": "https://docs.joinmastodon.org/methods/email_domain_blocks/#delete",
              "uri": "/api/v1/admin/email_domain_blocks/:id",
              "pathParams": [
                {
                  "name": "id",
                  "nullable": 0,
                  "required": 1,
                  "type": "string",
                  "description": "The ID of the DomainAllow in the database."
                }
              ],
              "description": "Delete an email domain block"
            },
            "create": {
              "uri": "/api/v1/admin/email_domain_blocks",
              "pathParams": [],
              "queryParams": [],
              "formParams": [
                {
                  "description": "The domain to block federation with.",
                  "type": "string",
                  "required": 1,
                  "name": "domain",
                  "nullable": 0
                }
              ],
              "returns": "Admin::EmailDomainBlock",
              "name": "create",
              "url": "https://docs.joinmastodon.org/methods/email_domain_blocks/#create",
              "description": "Block an email domain from signups",
              "returnsArray": null,
              "method": "POST",
              "namespace": "admin::email_domain_blocks"
            }
          },
          "url": "https://docs.joinmastodon.org/methods/email_domain_blocks/"
        }
      }
    },
    "polls": {
      "description": " View and vote on polls attached to statuses. To discover poll ID, you will need to GET a Status first and then check for a `poll` property.",
      "methods": {
        "get": {
          "method": "GET",
          "namespace": "polls",
          "returnsArray": null,
          "description": "View a poll",
          "returns": "Poll",
          "formParams": [],
          "queryParams": [],
          "name": "get",
          "url": "https://docs.joinmastodon.org/methods/polls/#get",
          "uri": "/api/v1/polls/:id",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Poll in the database.",
              "name": "id",
              "nullable": 0,
              "required": 1
            }
          ]
        },
        "vote": {
          "method": "POST",
          "namespace": "polls",
          "returnsArray": null,
          "description": "Vote on a poll",
          "url": "https://docs.joinmastodon.org/methods/polls/#vote",
          "queryParams": [],
          "formParams": [
            {
              "nullable": 0,
              "name": "choices[]",
              "required": 1,
              "type": "array<Integer>",
              "description": "Provide your own votes as an index for each option (starting from 0)."
            }
          ],
          "returns": "Poll",
          "name": "vote",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Poll in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/polls/:id/votes"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/polls/"
    },
    "lists": {
      "methods": {
        "accounts-remove": {
          "method": "DELETE",
          "namespace": "lists",
          "returnsArray": null,
          "description": "Remove accounts from list",
          "formParams": [
            {
              "description": "The accounts that should be removed from the list.",
              "type": "array<String>",
              "required": 1,
              "name": "account_ids[]",
              "nullable": 0
            }
          ],
          "name": "accounts-remove",
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "url": "https://docs.joinmastodon.org/methods/lists/#accounts-remove",
          "uri": "/api/v1/lists/:id/accounts",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the List in the database."
            }
          ]
        },
        "accounts": {
          "description": "View accounts in a list",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the List in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/lists/:id/accounts",
          "url": "https://docs.joinmastodon.org/methods/lists/#accounts",
          "formParams": [],
          "queryParams": [
            {
              "type": "integer",
              "description": "Maximum number of results. Defaults to 40 accounts. Max 80 accounts. Set to 0 in order to get all accounts without pagination.",
              "name": "limit",
              "nullable": 0,
              "required": 0
            }
          ],
          "name": "accounts",
          "returns": "Account",
          "method": "GET",
          "namespace": "lists",
          "returnsArray": 1
        },
        "update": {
          "url": "https://docs.joinmastodon.org/methods/lists/#update",
          "queryParams": [],
          "formParams": [
            {
              "required": 1,
              "name": "title",
              "nullable": 0,
              "description": "The title of the list to be created.",
              "type": "string"
            },
            {
              "name": "replies_policy",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "One of `followed`, `list`, or `none`. Defaults to `list`."
            }
          ],
          "returns": "List",
          "name": "update",
          "pathParams": [
            {
              "description": "The ID of the List in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/lists/:id",
          "description": "Update a list",
          "returnsArray": 1,
          "namespace": "lists",
          "method": "PUT"
        },
        "accounts-add": {
          "returnsArray": null,
          "method": "POST",
          "namespace": "lists",
          "url": "https://docs.joinmastodon.org/methods/lists/#accounts-add",
          "formParams": [
            {
              "nullable": 0,
              "name": "account_ids[]",
              "required": 1,
              "type": "array<String>",
              "description": "The accounts that should be added to the list."
            }
          ],
          "name": "accounts-add",
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "pathParams": [
            {
              "description": "The ID of the List in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "uri": "/api/v1/lists/:id/accounts",
          "description": "Add accounts to a list"
        },
        "create": {
          "description": "Create a list",
          "pathParams": [],
          "uri": "/api/v1/lists",
          "url": "https://docs.joinmastodon.org/methods/lists/#create",
          "formParams": [
            {
              "type": "string",
              "description": "The title of the list to be created.",
              "nullable": 0,
              "name": "title",
              "required": 1
            },
            {
              "type": "string",
              "description": "One of `followed`, `list`, or `none`. Defaults to `list`.",
              "nullable": 0,
              "name": "replies_policy",
              "required": 0
            }
          ],
          "queryParams": [],
          "name": "create",
          "returns": "List",
          "namespace": "lists",
          "method": "POST",
          "returnsArray": 1
        },
        "delete": {
          "url": "https://docs.joinmastodon.org/methods/lists/#delete",
          "returns": "EmptyOrUnknown",
          "formParams": [],
          "queryParams": [],
          "name": "delete",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the List in the database."
            }
          ],
          "uri": "/api/v1/lists/:id",
          "description": "Delete a list",
          "returnsArray": null,
          "method": "DELETE",
          "namespace": "lists"
        },
        "get-one": {
          "method": "GET",
          "namespace": "lists",
          "returnsArray": 1,
          "description": "Show a single list",
          "url": "https://docs.joinmastodon.org/methods/lists/#get-one",
          "formParams": [],
          "queryParams": [],
          "returns": "List",
          "name": "get-one",
          "pathParams": [
            {
              "description": "The ID of the List in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/lists/:id"
        },
        "get": {
          "description": "View your lists",
          "pathParams": [],
          "uri": "/api/v1/lists",
          "url": "https://docs.joinmastodon.org/methods/lists/#get",
          "formParams": [],
          "name": "get",
          "queryParams": [],
          "returns": "List",
          "namespace": "lists",
          "method": "GET",
          "returnsArray": 1
        }
      },
      "url": "https://docs.joinmastodon.org/methods/lists/",
      "description": " View and manage lists. See also: /api/v1/timelines/list/id for loading a list timeline."
    },
    "streaming": {
      "methods": {
        "health": {
          "url": "https://docs.joinmastodon.org/methods/streaming/#health",
          "returns": "EmptyOrUnknown",
          "formParams": [],
          "queryParams": [],
          "name": "health",
          "pathParams": [],
          "uri": "/api/v1/streaming/health",
          "description": "Check if the server is alive",
          "returnsArray": null,
          "namespace": "streaming",
          "method": "GET"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/streaming/",
      "description": " Subscribe to server-sent events for real-time updates via a long-lived HTTP connection or via WebSocket."
    },
    "timelines": {
      "url": "https://docs.joinmastodon.org/methods/timelines/",
      "methods": {
        "direct": {
          "pathParams": [],
          "uri": "/api/v1/timelines/direct",
          "url": "https://docs.joinmastodon.org/methods/timelines/#direct",
          "formParams": [],
          "returns": "Status",
          "queryParams": [
            {
              "name": "max_id ",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Return results older than ID."
            },
            {
              "name": "since_id",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Return results newer than ID."
            },
            {
              "description": "Return results immediately newer than ID.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "min_id"
            },
            {
              "nullable": 0,
              "name": "limit",
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses."
            }
          ],
          "name": "direct",
          "description": "(DEPRECATED) View direct timeline",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "timelines"
        },
        "public": {
          "url": "https://docs.joinmastodon.org/methods/timelines/#public",
          "queryParams": [
            {
              "type": "boolean",
              "description": "Show only local statuses? Defaults to false.",
              "name": "local",
              "nullable": 0,
              "required": 0
            },
            {
              "description": "Show only remote statuses? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "name": "remote",
              "nullable": 0
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "only_media",
              "description": "Show only statuses with media attached? Defaults to false.",
              "type": "boolean"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "max_id ",
              "description": "Return results older than ID.",
              "type": "string"
            },
            {
              "name": "since_id",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Return results newer than ID."
            },
            {
              "description": "Return results immediately newer than ID.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "min_id"
            },
            {
              "name": "limit",
              "nullable": 0,
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses."
            }
          ],
          "formParams": [],
          "name": "public",
          "returns": "Status",
          "pathParams": [],
          "uri": "/api/v1/timelines/public",
          "description": "View public timeline",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "timelines"
        },
        "list": {
          "formParams": [],
          "queryParams": [
            {
              "name": "max_id ",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Return results older than ID."
            },
            {
              "required": 0,
              "name": "since_id",
              "nullable": 0,
              "description": "Return results newer than ID.",
              "type": "string"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "min_id",
              "description": "Return results immediately newer than ID.",
              "type": "string"
            },
            {
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "nullable": 0,
              "name": "limit",
              "required": 0
            }
          ],
          "name": "list",
          "returns": "Status",
          "url": "https://docs.joinmastodon.org/methods/timelines/#list",
          "uri": "/api/v1/timelines/list/:list_id",
          "pathParams": [
            {
              "description": "Local ID of the List in the database.",
              "type": "string",
              "required": 1,
              "name": "list_id",
              "nullable": 0
            }
          ],
          "description": "View list timeline",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "timelines"
        },
        "home": {
          "description": "View home timeline",
          "url": "https://docs.joinmastodon.org/methods/timelines/#home",
          "returns": "Status",
          "formParams": [],
          "queryParams": [
            {
              "type": "string",
              "description": "Return results older than ID.",
              "name": "max_id ",
              "nullable": 0,
              "required": 0
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "since_id",
              "description": "Return results newer than ID.",
              "type": "string"
            },
            {
              "nullable": 0,
              "name": "min_id",
              "required": 0,
              "type": "string",
              "description": "Return results immediately newer than ID."
            },
            {
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "name": "limit",
              "nullable": 0,
              "required": 0
            }
          ],
          "name": "home",
          "pathParams": [],
          "uri": "/api/v1/timelines/home",
          "namespace": "timelines",
          "method": "GET",
          "returnsArray": 1
        },
        "tag": {
          "returnsArray": 1,
          "method": "GET",
          "namespace": "timelines",
          "uri": "/api/v1/timelines/tag/:hashtag",
          "pathParams": [
            {
              "description": "The name of the hashtag (not including the # symbol).",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "hashtag"
            }
          ],
          "queryParams": [
            {
              "description": "Return statuses that contain any of these additional tags.",
              "type": "array<String>",
              "required": 0,
              "nullable": 0,
              "name": "any[]"
            },
            {
              "required": 0,
              "name": "all[]",
              "nullable": 0,
              "description": "Return statuses that contain all of these additional tags.",
              "type": "array<String>"
            },
            {
              "description": "Return statuses that contain none of these additional tags.",
              "type": "array<String>",
              "required": 0,
              "name": "none[]",
              "nullable": 0
            },
            {
              "description": "Return only local statuses? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "name": "local",
              "nullable": 0
            },
            {
              "required": 0,
              "name": "remote",
              "nullable": 0,
              "description": "Return only remote statuses? Defaults to false.",
              "type": "boolean"
            },
            {
              "description": "Return only statuses with media attachments? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "nullable": 0,
              "name": "only_media"
            },
            {
              "type": "string",
              "description": "Return results older than ID.",
              "name": "max_id ",
              "nullable": 0,
              "required": 0
            },
            {
              "required": 0,
              "name": "since_id",
              "nullable": 0,
              "description": "Return results newer than ID.",
              "type": "string"
            },
            {
              "name": "min_id",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Return results immediately newer than ID."
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "limit",
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "type": "integer"
            }
          ],
          "formParams": [],
          "returns": "Status",
          "name": "tag",
          "url": "https://docs.joinmastodon.org/methods/timelines/#tag",
          "description": "View hashtag timeline"
        }
      },
      "description": "Read and view timelines of statuses."
    },
    "notifications": {
      "description": "Receive notifications for activity on your account or statuses.",
      "url": "https://docs.joinmastodon.org/methods/notifications/",
      "methods": {
        "get": {
          "namespace": "notifications",
          "method": "GET",
          "returnsArray": 1,
          "description": "Get all notifications",
          "queryParams": [
            {
              "nullable": 0,
              "name": "max_id ",
              "required": 0,
              "type": "string",
              "description": "Return results older than this ID"
            },
            {
              "required": 0,
              "name": "since_id",
              "nullable": 0,
              "description": "Return results newer than this ID",
              "type": "string"
            },
            {
              "required": 0,
              "name": "min_id",
              "nullable": 0,
              "description": "Return results immediately newer than this ID",
              "type": "string"
            },
            {
              "description": "Maximum number of results to return. Defaults to 15 notifications. Max 30 notifications.",
              "type": "integer",
              "required": 0,
              "nullable": 0,
              "name": "limit"
            },
            {
              "type": "array<String>",
              "description": "Types to include in the result.",
              "nullable": 0,
              "name": "types[]",
              "required": 0
            },
            {
              "description": "Types to exclude from the results.",
              "type": "array<String>",
              "required": 0,
              "name": "exclude_types[]",
              "nullable": 0
            },
            {
              "type": "string",
              "description": "Return only notifications received from the specified account.",
              "name": "account_id",
              "nullable": 0,
              "required": 0
            }
          ],
          "formParams": [],
          "returns": "Notification",
          "name": "get",
          "url": "https://docs.joinmastodon.org/methods/notifications/#get",
          "uri": "/api/v1/notifications",
          "pathParams": []
        },
        "dismiss-deprecated": {
          "method": "POST",
          "namespace": "notifications",
          "returnsArray": null,
          "description": "(REMOVED) Dismiss a single notification",
          "uri": "/api/v1/notifications/dismiss",
          "pathParams": [],
          "formParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the notification in the database."
            }
          ],
          "queryParams": [],
          "name": "dismiss-deprecated",
          "returns": "EmptyOrUnknown",
          "url": "https://docs.joinmastodon.org/methods/notifications/#dismiss-deprecated"
        },
        "get-one": {
          "queryParams": [],
          "formParams": [],
          "returns": "Notification",
          "name": "get-one",
          "url": "https://docs.joinmastodon.org/methods/notifications/#get-one",
          "uri": "/api/v1/notifications/:id",
          "pathParams": [
            {
              "description": "The ID of the Notification in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "description": "Get a single notification",
          "returnsArray": null,
          "method": "GET",
          "namespace": "notifications"
        },
        "clear": {
          "namespace": "notifications",
          "method": "POST",
          "returnsArray": null,
          "description": "Dismiss all notifications",
          "url": "https://docs.joinmastodon.org/methods/notifications/#clear",
          "name": "clear",
          "formParams": [],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "pathParams": [],
          "uri": "/api/v1/notifications/clear"
        },
        "dismiss": {
          "returnsArray": null,
          "namespace": "notifications",
          "method": "POST",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Notification in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "uri": "/api/v1/notifications/:id/dismiss",
          "url": "https://docs.joinmastodon.org/methods/notifications/#dismiss",
          "formParams": [],
          "name": "dismiss",
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "description": "Dismiss a single notification"
        }
      }
    },
    "oembed": {
      "url": "https://docs.joinmastodon.org/methods/oembed/",
      "methods": {
        "get": {
          "namespace": "oembed",
          "method": "GET",
          "returnsArray": null,
          "description": "Get OEmbed info as JSON",
          "uri": "/api/oembed",
          "pathParams": [],
          "formParams": [],
          "name": "get",
          "queryParams": [
            {
              "nullable": 0,
              "name": "url",
              "required": 1,
              "type": "string",
              "description": "URL of a status."
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "maxwidth",
              "description": "Width of the iframe. Defaults to 400",
              "type": "integer"
            },
            {
              "required": 0,
              "name": "maxheight",
              "nullable": 0,
              "description": "Height of the iframe. Defaults to null",
              "type": "integer"
            }
          ],
          "returns": "EmptyOrUnknown",
          "url": "https://docs.joinmastodon.org/methods/oembed/#get"
        }
      },
      "description": "For generating OEmbed previews."
    },
    "suggestions": {
      "methods": {
        "v2": {
          "namespace": "suggestions",
          "method": "GET",
          "returnsArray": 1,
          "description": "View follow suggestions (v2)",
          "pathParams": [],
          "uri": "/api/v2/suggestions",
          "url": "https://docs.joinmastodon.org/methods/suggestions/#v2",
          "formParams": [],
          "returns": "Suggestion",
          "queryParams": [
            {
              "name": "limit",
              "nullable": 0,
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts."
            }
          ],
          "name": "v2"
        },
        "remove": {
          "returnsArray": null,
          "method": "DELETE",
          "namespace": "suggestions",
          "pathParams": [
            {
              "description": "The ID of the Account in the database.",
              "type": "string",
              "required": 1,
              "name": "account_id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/suggestions/:account_id",
          "url": "https://docs.joinmastodon.org/methods/suggestions/#remove",
          "queryParams": [],
          "formParams": [],
          "returns": "EmptyOrUnknown",
          "name": "remove",
          "description": "Remove a suggestion"
        },
        "v1": {
          "namespace": "suggestions",
          "method": "GET",
          "returnsArray": 1,
          "description": "(DEPRECATED) View follow suggestions (v1)",
          "url": "https://docs.joinmastodon.org/methods/suggestions/#v1",
          "formParams": [],
          "queryParams": [
            {
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts.",
              "name": "limit",
              "nullable": 0,
              "required": 0
            }
          ],
          "name": "v1",
          "returns": "Account",
          "pathParams": [],
          "uri": "/api/v1/suggestions"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/suggestions/",
      "description": " Server-generated suggestions on who to follow, based on previous positive interactions."
    },
    "apps": {
      "description": "Register client applications that can be used to obtain OAuth tokens.",
      "methods": {
        "create": {
          "description": "Create an application",
          "uri": "/api/v1/apps",
          "pathParams": [],
          "formParams": [
            {
              "type": "string",
              "description": "A name for your application",
              "name": "client_name",
              "nullable": 0,
              "required": 1
            },
            {
              "type": "string",
              "description": "Where the user should be redirected after authorization. To display the authorization code to the user instead of redirecting to a web page, use `urn:ietf:wg:oauth:2.0:oob` in this parameter.",
              "nullable": 0,
              "name": "redirect_uris",
              "required": 1
            },
            {
              "required": 0,
              "name": "scopes",
              "nullable": 0,
              "description": "Space separated list of scopes. If none is provided, defaults to `read`. See [OAuth Scopes]({{< relref \"api/oauth-scopes\" >}}) for a list of possible scopes.",
              "type": "string"
            },
            {
              "type": "string",
              "description": "A URL to the homepage of your app",
              "nullable": 0,
              "name": "website",
              "required": 0
            }
          ],
          "name": "create",
          "queryParams": [],
          "returns": "Application",
          "url": "https://docs.joinmastodon.org/methods/apps/#create",
          "method": "POST",
          "namespace": "apps",
          "returnsArray": null
        },
        "verify_credentials": {
          "returnsArray": null,
          "method": "GET",
          "namespace": "apps",
          "uri": "/api/v1/apps/verify_credentials",
          "pathParams": [],
          "queryParams": [],
          "formParams": [],
          "name": "verify_credentials",
          "returns": "Application",
          "url": "https://docs.joinmastodon.org/methods/apps/#verify_credentials",
          "description": "Verify your app works"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/apps/"
    },
    "preferences": {
      "methods": {
        "get": {
          "returnsArray": null,
          "method": "GET",
          "namespace": "preferences",
          "pathParams": [],
          "uri": "/api/v1/preferences",
          "url": "https://docs.joinmastodon.org/methods/preferences/#get",
          "formParams": [],
          "queryParams": [],
          "returns": "Preferences",
          "name": "get",
          "description": "View user preferences"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/preferences/",
      "description": "Preferred common behaviors to be shared across clients."
    },
    "followed_tags": {
      "description": "View your followed hashtags.",
      "methods": {
        "get": {
          "uri": "/api/v1/followed_tags",
          "pathParams": [],
          "name": "get",
          "formParams": [],
          "queryParams": [
            {
              "nullable": 0,
              "name": "limit",
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 100 tags. Max 200 tags."
            }
          ],
          "returns": "Tag",
          "url": "https://docs.joinmastodon.org/methods/followed_tags/#get",
          "description": "View all followed tags",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "followed_tags"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/followed_tags/"
    },
    "media": {
      "description": " Attach media to authored statuses. See Using Mastodon > Posting toots > Attachments for more information about size and format limits.",
      "methods": {
        "get": {
          "returnsArray": null,
          "method": "GET",
          "namespace": "media",
          "uri": "/api/v1/media/:id",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the MediaAttachment in the database."
            }
          ],
          "formParams": [],
          "name": "get",
          "queryParams": [],
          "returns": "MediaAttachment",
          "url": "https://docs.joinmastodon.org/methods/media/#get",
          "description": "Get media attachment"
        },
        "v2": {
          "formParams": [
            {
              "description": "The file to be attached, encoded using multipart form data. The file must have a MIME type.",
              "type": "hash",
              "required": 1,
              "name": "file",
              "nullable": 0
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "thumbnail",
              "description": "The custom thumbnail of the media to be attached, encoded using multipart form data.",
              "type": "hash"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "description",
              "description": "A plain-text description of the media, for accessibility purposes.",
              "type": "string"
            },
            {
              "name": "focus",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Two floating points (x,y), comma-delimited, ranging from -1.0 to 1.0. See [Focal points for cropping media thumbnails]({{< relref \"api/guidelines#focal-points\" >}}) for more information."
            }
          ],
          "queryParams": [],
          "name": "v2",
          "returns": "MediaAttachment",
          "url": "https://docs.joinmastodon.org/methods/media/#v2",
          "uri": "/api/v2/media",
          "pathParams": [],
          "description": "Upload media as an attachment (async)",
          "returnsArray": null,
          "namespace": "media",
          "method": "POST"
        },
        "v1": {
          "description": "(DEPRECATED) Upload media as an attachment",
          "pathParams": [],
          "uri": "/api/v1/media",
          "url": "https://docs.joinmastodon.org/methods/media/#v1",
          "formParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "file",
              "description": "The file to be attached, encoded using multipart form data. The file must have a MIME type.",
              "type": "hash"
            },
            {
              "type": "hash",
              "description": "The custom thumbnail of the media to be attached, encoded using multipart form data.",
              "nullable": 0,
              "name": "thumbnail",
              "required": 0
            },
            {
              "required": 0,
              "name": "description",
              "nullable": 0,
              "description": "A plain-text description of the media, for accessibility purposes.",
              "type": "string"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "focus",
              "description": "Two floating points (x,y), comma-delimited, ranging from -1.0 to 1.0. See [Focal points for cropping media thumbnails]({{< relref \"api/guidelines#focal-points\" >}}) for more information.",
              "type": "string"
            }
          ],
          "name": "v1",
          "queryParams": [],
          "returns": "MediaAttachment",
          "namespace": "media",
          "method": "POST",
          "returnsArray": null
        },
        "update": {
          "description": "Update media attachment",
          "uri": "/api/v1/media/:id",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the MediaAttachment in the database.",
              "name": "id",
              "nullable": 0,
              "required": 1
            }
          ],
          "queryParams": [],
          "formParams": [
            {
              "type": "hash",
              "description": "The custom thumbnail of the media to be attached, encoded using multipart form data.",
              "nullable": 0,
              "name": "thumbnail",
              "required": 0
            },
            {
              "nullable": 0,
              "name": "description",
              "required": 0,
              "type": "string",
              "description": "A plain-text description of the media, for accessibility purposes."
            },
            {
              "type": "string",
              "description": "Two floating points (x,y), comma-delimited, ranging from -1.0 to 1.0. See [Focal points for cropping media thumbnails]({{< relref \"api/guidelines#focal-points\" >}}) for more information.",
              "nullable": 0,
              "name": "focus",
              "required": 0
            }
          ],
          "returns": "MediaAttachment",
          "name": "update",
          "url": "https://docs.joinmastodon.org/methods/media/#update",
          "method": "PUT",
          "namespace": "media",
          "returnsArray": null
        }
      },
      "url": "https://docs.joinmastodon.org/methods/media/"
    },
    "follow_requests": {
      "description": "View and manage follow requests.",
      "url": "https://docs.joinmastodon.org/methods/follow_requests/",
      "methods": {
        "accept": {
          "namespace": "follow_requests",
          "method": "POST",
          "returnsArray": null,
          "description": "Accept follow request",
          "uri": "/api/v1/follow_requests/:account_id/authorize",
          "pathParams": [
            {
              "name": "account_id",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "The ID of the Account in the database."
            }
          ],
          "returns": "Relationship",
          "formParams": [],
          "queryParams": [],
          "name": "accept",
          "url": "https://docs.joinmastodon.org/methods/follow_requests/#accept"
        },
        "get": {
          "description": "View pending follow requests",
          "pathParams": [],
          "uri": "/api/v1/follow_requests",
          "url": "https://docs.joinmastodon.org/methods/follow_requests/#get",
          "queryParams": [
            {
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts.",
              "type": "integer",
              "required": 0,
              "name": "limit",
              "nullable": 0
            }
          ],
          "formParams": [],
          "returns": "Account",
          "name": "get",
          "namespace": "follow_requests",
          "method": "GET",
          "returnsArray": 1
        },
        "reject": {
          "formParams": [],
          "returns": "Relationship",
          "queryParams": [],
          "name": "reject",
          "url": "https://docs.joinmastodon.org/methods/follow_requests/#reject",
          "uri": "/api/v1/follow_requests/:account_id/reject",
          "pathParams": [
            {
              "required": 1,
              "name": "account_id",
              "nullable": 0,
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "description": "Reject follow request",
          "returnsArray": null,
          "method": "POST",
          "namespace": "follow_requests"
        }
      }
    },
    "emails": {
      "url": "https://docs.joinmastodon.org/methods/emails/",
      "methods": {
        "confirmation": {
          "namespace": "emails",
          "method": "POST",
          "returnsArray": null,
          "description": "Resend confirmation email",
          "url": "https://docs.joinmastodon.org/methods/emails/#confirmation",
          "name": "confirmation",
          "formParams": [],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "pathParams": [],
          "uri": "/api/v1/emails/confirmation"
        }
      },
      "description": "Request a new confirmation email, potentially to a new email address."
    },
    "featured_tags": {
      "description": "Feature tags that you use frequently on your profile.",
      "url": "https://docs.joinmastodon.org/methods/featured_tags/",
      "methods": {
        "suggestions": {
          "description": "View suggested tags to feature",
          "pathParams": [],
          "uri": "/api/v1/featured_tags/suggestions",
          "url": "https://docs.joinmastodon.org/methods/featured_tags/#suggestions",
          "name": "suggestions",
          "formParams": [],
          "queryParams": [],
          "returns": "Tag",
          "method": "GET",
          "namespace": "featured_tags",
          "returnsArray": 1
        },
        "get": {
          "namespace": "featured_tags",
          "method": "GET",
          "returnsArray": 1,
          "description": "View your featured tags",
          "uri": "/api/v1/featured_tags",
          "pathParams": [],
          "formParams": [],
          "queryParams": [],
          "name": "get",
          "returns": "FeaturedTag",
          "url": "https://docs.joinmastodon.org/methods/featured_tags/#get"
        },
        "unfeature": {
          "returnsArray": null,
          "method": "DELETE",
          "namespace": "featured_tags",
          "formParams": [],
          "returns": "EmptyOrUnknown",
          "queryParams": [],
          "name": "unfeature",
          "url": "https://docs.joinmastodon.org/methods/featured_tags/#unfeature",
          "uri": "/api/v1/featured_tags/:id",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the FeaturedTag in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "description": "Unfeature a tag"
        },
        "feature": {
          "uri": "/api/v1/featured_tags",
          "pathParams": [],
          "formParams": [
            {
              "nullable": 0,
              "name": "name",
              "required": 1,
              "type": "string",
              "description": "The hashtag to be featured, without the hash sign."
            }
          ],
          "name": "feature",
          "queryParams": [],
          "returns": "FeaturedTag",
          "url": "https://docs.joinmastodon.org/methods/featured_tags/#feature",
          "description": "Feature a tag",
          "returnsArray": null,
          "method": "POST",
          "namespace": "featured_tags"
        }
      }
    },
    "accounts": {
      "description": "Methods concerning accounts and profiles.",
      "methods": {
        "verify_credentials": {
          "queryParams": [],
          "formParams": [],
          "name": "verify_credentials",
          "returns": "CredentialAccount",
          "url": "https://docs.joinmastodon.org/methods/accounts/#verify_credentials",
          "uri": "/api/v1/accounts/verify_credentials",
          "pathParams": [],
          "description": "Verify account credentials",
          "returnsArray": null,
          "method": "GET",
          "namespace": "accounts"
        },
        "unfollow": {
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/accounts/:id/unfollow",
          "url": "https://docs.joinmastodon.org/methods/accounts/#unfollow",
          "queryParams": [],
          "formParams": [],
          "name": "unfollow",
          "returns": "Relationship",
          "description": "Unfollow account",
          "returnsArray": null,
          "method": "POST",
          "namespace": "accounts"
        },
        "following": {
          "pathParams": [
            {
              "description": "The ID of the Account in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "uri": "/api/v1/accounts/:id/following",
          "url": "https://docs.joinmastodon.org/methods/accounts/#following",
          "queryParams": [
            {
              "nullable": 0,
              "name": "limit",
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts."
            }
          ],
          "formParams": [],
          "name": "following",
          "returns": "Account",
          "description": "Get account's following",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "accounts"
        },
        "statuses": {
          "returnsArray": 1,
          "namespace": "accounts",
          "method": "GET",
          "uri": "/api/v1/accounts/:id/statuses",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "formParams": [],
          "name": "statuses",
          "queryParams": [
            {
              "name": "max_id ",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Return results older than this ID"
            },
            {
              "nullable": 0,
              "name": "since_id",
              "required": 0,
              "type": "string",
              "description": "Return results newer than this ID"
            },
            {
              "type": "string",
              "description": "Return results immediately newer than this ID",
              "name": "min_id",
              "nullable": 0,
              "required": 0
            },
            {
              "required": 0,
              "name": "limit",
              "nullable": 0,
              "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
              "type": "integer"
            },
            {
              "required": 0,
              "name": "only_media",
              "nullable": 0,
              "description": "Filter out statuses without attachments.",
              "type": "boolean"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "exclude_replies",
              "description": "Filter out statuses in reply to a different account.",
              "type": "boolean"
            },
            {
              "type": "boolean",
              "description": "Filter out boosts from the response.",
              "nullable": 0,
              "name": "exclude_reblogs",
              "required": 0
            },
            {
              "type": "boolean",
              "description": "Filter for pinned statuses only. Defaults to false, which includes all statuses. Pinned statuses do not receive special priority in the order of the returned results.",
              "name": "pinned",
              "nullable": 0,
              "required": 0
            },
            {
              "nullable": 0,
              "name": "tagged",
              "required": 0,
              "type": "string",
              "description": "Filter for statuses using a specific hashtag."
            }
          ],
          "returns": "Status",
          "url": "https://docs.joinmastodon.org/methods/accounts/#statuses",
          "description": "Get account's statuses"
        },
        "featured_tags": {
          "uri": "/api/v1/accounts/:id/featured_tags",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Account in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "queryParams": [],
          "formParams": [],
          "returns": "FeaturedTag",
          "name": "featured_tags",
          "url": "https://docs.joinmastodon.org/methods/accounts/#featured_tags",
          "description": "Get account's featured tags",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "accounts"
        },
        "identity_proofs": {
          "namespace": "accounts",
          "method": "GET",
          "returnsArray": 1,
          "description": "(DEPRECATED) Identity proofs",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/accounts/:id/identity_proofs",
          "url": "https://docs.joinmastodon.org/methods/accounts/#identity_proofs",
          "queryParams": [],
          "formParams": [],
          "name": "identity_proofs",
          "returns": "IdentityProof"
        },
        "unmute": {
          "method": "POST",
          "namespace": "accounts",
          "returnsArray": null,
          "description": "Unmute account",
          "formParams": [],
          "returns": "Relationship",
          "queryParams": [],
          "name": "unmute",
          "url": "https://docs.joinmastodon.org/methods/accounts/#unmute",
          "uri": "/api/v1/accounts/:id/unmute",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Account in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ]
        },
        "search": {
          "returnsArray": 1,
          "namespace": "accounts",
          "method": "GET",
          "uri": "/api/v1/accounts/search",
          "pathParams": [],
          "formParams": [],
          "queryParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "q",
              "description": "Search query for accounts.",
              "type": "string"
            },
            {
              "name": "limit",
              "nullable": 0,
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results. Defaults to 40 accounts. Max 80 accounts."
            },
            {
              "name": "offset",
              "nullable": 0,
              "required": 0,
              "type": "integer",
              "description": "Skip the first n results."
            },
            {
              "description": "Attempt WebFinger lookup. Defaults to false. Use this when `q` is an exact address.",
              "type": "boolean",
              "required": 0,
              "name": "resolve",
              "nullable": 0
            },
            {
              "description": "Limit the search to users you are following. Defaults to false.",
              "type": "boolean",
              "required": 0,
              "nullable": 0,
              "name": "following"
            }
          ],
          "returns": "Account",
          "name": "search",
          "url": "https://docs.joinmastodon.org/methods/accounts/#search",
          "description": "Search for matching accounts"
        },
        "unpin": {
          "returnsArray": null,
          "method": "POST",
          "namespace": "accounts",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/accounts/:id/unpin",
          "url": "https://docs.joinmastodon.org/methods/accounts/#unpin",
          "formParams": [],
          "returns": "Relationship",
          "queryParams": [],
          "name": "unpin",
          "description": "Unfeature account from profile"
        },
        "remove_from_followers": {
          "description": "Remove account from followers",
          "uri": "/api/v1/accounts/:id/remove_from_followers",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "queryParams": [],
          "formParams": [],
          "name": "remove_from_followers",
          "returns": "Relationship",
          "url": "https://docs.joinmastodon.org/methods/accounts/#remove_from_followers",
          "method": "POST",
          "namespace": "accounts",
          "returnsArray": null
        },
        "follow": {
          "description": "Follow account",
          "uri": "/api/v1/accounts/:id/follow",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "formParams": [
            {
              "required": 0,
              "name": "reblogs",
              "nullable": 0,
              "description": "Receive this account's reblogs in home timeline? Defaults to true.",
              "type": "boolean"
            },
            {
              "description": "Receive notifications when this account posts a status? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "nullable": 0,
              "name": "notify"
            },
            {
              "required": 0,
              "name": "languages",
              "nullable": 0,
              "description": "Filter received statuses for these languages. If not provided, you will receive this account's posts in all languages.",
              "type": "array<String>"
            }
          ],
          "returns": "Relationship",
          "queryParams": [],
          "name": "follow",
          "url": "https://docs.joinmastodon.org/methods/accounts/#follow",
          "method": "POST",
          "namespace": "accounts",
          "returnsArray": null
        },
        "get": {
          "returnsArray": null,
          "method": "GET",
          "namespace": "accounts",
          "pathParams": [
            {
              "description": "The ID of the Account in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "uri": "/api/v1/accounts/:id",
          "url": "https://docs.joinmastodon.org/methods/accounts/#get",
          "queryParams": [],
          "formParams": [],
          "returns": "Account",
          "name": "get",
          "description": "Get account"
        },
        "pin": {
          "method": "POST",
          "namespace": "accounts",
          "returnsArray": null,
          "description": "Feature account on your profile",
          "name": "pin",
          "formParams": [],
          "queryParams": [],
          "returns": "Relationship",
          "url": "https://docs.joinmastodon.org/methods/accounts/#pin",
          "uri": "/api/v1/accounts/:id/pin",
          "pathParams": [
            {
              "name": "id",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "The ID of the Account in the database."
            }
          ]
        },
        "lookup": {
          "method": "GET",
          "namespace": "accounts",
          "returnsArray": null,
          "description": "Lookup account ID from Webfinger address",
          "url": "https://docs.joinmastodon.org/methods/accounts/#lookup",
          "queryParams": [
            {
              "type": "string",
              "description": "The username or Webfinger address to lookup.",
              "nullable": 0,
              "name": "acct",
              "required": 1
            }
          ],
          "formParams": [],
          "name": "lookup",
          "returns": "Account",
          "pathParams": [],
          "uri": "/api/v1/accounts/lookup"
        },
        "unblock": {
          "formParams": [],
          "queryParams": [],
          "returns": "Relationship",
          "name": "unblock",
          "url": "https://docs.joinmastodon.org/methods/accounts/#unblock",
          "uri": "/api/v1/accounts/:id/unblock",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "description": "Unblock account",
          "returnsArray": null,
          "namespace": "accounts",
          "method": "POST"
        },
        "note": {
          "method": "POST",
          "namespace": "accounts",
          "returnsArray": null,
          "description": "Set private note on profile",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Account in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/accounts/:id/note",
          "url": "https://docs.joinmastodon.org/methods/accounts/#note",
          "returns": "Relationship",
          "formParams": [
            {
              "required": 0,
              "name": "comment",
              "nullable": 0,
              "description": "The comment to be set on that user. Provide an empty string or leave out this parameter to clear the currently set note.",
              "type": "string"
            }
          ],
          "queryParams": [],
          "name": "note"
        },
        "update_credentials": {
          "returnsArray": null,
          "namespace": "accounts",
          "method": "PATCH",
          "pathParams": [],
          "uri": "/api/v1/accounts/update_credentials",
          "url": "https://docs.joinmastodon.org/methods/accounts/#update_credentials",
          "queryParams": [],
          "formParams": [
            {
              "description": "The display name to use for the profile. ",
              "type": "string",
              "required": 0,
              "name": "display_name",
              "nullable": 0
            },
            {
              "description": "The account bio.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "note"
            },
            {
              "description": "Avatar image encoded using `multipart/form-data`",
              "type": "string",
              "required": 0,
              "name": "avatar",
              "nullable": 1
            },
            {
              "description": "Header image encoded using `multipart/form-data`",
              "type": "string",
              "required": 0,
              "nullable": 1,
              "name": "header"
            },
            {
              "type": "boolean",
              "description": "Whether manual approval of follow requests is required.",
              "nullable": 0,
              "name": "locked",
              "required": 0
            },
            {
              "description": "Whether the account has a bot flag.",
              "type": "boolean",
              "required": 0,
              "nullable": 0,
              "name": "bot"
            },
            {
              "required": 0,
              "name": "discoverable",
              "nullable": 0,
              "description": "Whether the account should be shown in the profile directory.",
              "type": "boolean"
            },
            {
              "type": "hash",
              "description": "The profile fields to be set. Inside this hash, the key is an integer cast to a string (although the exact integer does not matter), and the value is another hash including `name` and `value`. By default, max 4 fields.",
              "name": "fields_attributes",
              "nullable": 0,
              "required": 0
            },
            {
              "description": "source[privacy]: Default post privacy for authored statuses. Can be `public`, `unlisted`, or `private`.",
              "type": "array",
              "required": 0,
              "name": "source",
              "nullable": 1
            }
          ],
          "name": "update_credentials",
          "returns": "Account",
          "description": "Update account credentials"
        },
        "relationships": {
          "description": "Check relationships to other accounts",
          "uri": "/api/v1/accounts/relationships",
          "pathParams": [],
          "queryParams": [
            {
              "description": "Check relationships for the provided account IDs.",
              "type": "array",
              "required": 0,
              "name": "id[]",
              "nullable": 0
            }
          ],
          "formParams": [],
          "returns": "Relationship",
          "name": "relationships",
          "url": "https://docs.joinmastodon.org/methods/accounts/#relationships",
          "method": "GET",
          "namespace": "accounts",
          "returnsArray": 1
        },
        "followers": {
          "method": "GET",
          "namespace": "accounts",
          "returnsArray": 1,
          "description": "Get account's followers",
          "queryParams": [
            {
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts.",
              "type": "integer",
              "required": 0,
              "nullable": 0,
              "name": "limit"
            }
          ],
          "formParams": [],
          "name": "followers",
          "returns": "Account",
          "url": "https://docs.joinmastodon.org/methods/accounts/#followers",
          "uri": "/api/v1/accounts/:id/followers",
          "pathParams": [
            {
              "description": "The ID of the Account in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ]
        },
        "mute": {
          "description": "Mute account",
          "name": "mute",
          "formParams": [
            {
              "required": 0,
              "nullable": 0,
              "name": "notifications",
              "description": "Mute notifications in addition to statuses? Defaults to true.",
              "type": "boolean"
            },
            {
              "description": "How long the mute should last, in seconds. Defaults to 0 (indefinite).",
              "type": "integer",
              "required": 0,
              "nullable": 0,
              "name": "duration"
            }
          ],
          "queryParams": [],
          "returns": "Relationship",
          "url": "https://docs.joinmastodon.org/methods/accounts/#mute",
          "uri": "/api/v1/accounts/:id/mute",
          "pathParams": [
            {
              "description": "The ID of the Account in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "namespace": "accounts",
          "method": "POST",
          "returnsArray": null
        },
        "lists": {
          "url": "https://docs.joinmastodon.org/methods/accounts/#lists",
          "formParams": [],
          "queryParams": [],
          "name": "lists",
          "returns": "List",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the Account in the database."
            }
          ],
          "uri": "/api/v1/accounts/:id/lists",
          "description": "Get lists containing this account",
          "returnsArray": 1,
          "method": "GET",
          "namespace": "accounts"
        },
        "block": {
          "returns": "Relationship",
          "formParams": [],
          "queryParams": [],
          "name": "block",
          "url": "https://docs.joinmastodon.org/methods/accounts/#block",
          "uri": "/api/v1/accounts/:id/block",
          "pathParams": [
            {
              "description": "The ID of the Account in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "description": "Block account",
          "returnsArray": null,
          "method": "POST",
          "namespace": "accounts"
        },
        "create": {
          "returnsArray": null,
          "method": "POST",
          "namespace": "accounts",
          "url": "https://docs.joinmastodon.org/methods/accounts/#create",
          "name": "create",
          "formParams": [
            {
              "name": "username",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "The desired username for the account"
            },
            {
              "type": "string",
              "description": "The email address to be used for login",
              "name": "email",
              "nullable": 0,
              "required": 1
            },
            {
              "nullable": 0,
              "name": "password",
              "required": 1,
              "type": "string",
              "description": "The password to be used for login"
            },
            {
              "description": "Whether the user agrees to the local rules, terms, and policies. These should be presented to the user in order to allow them to consent before setting this parameter to TRUE.",
              "type": "boolean",
              "required": 1,
              "nullable": 0,
              "name": "agreement"
            },
            {
              "description": "The language of the confirmation email that will be sent.",
              "type": "string",
              "required": 1,
              "name": "locale",
              "nullable": 0
            },
            {
              "nullable": 0,
              "name": "reason",
              "required": 0,
              "type": "string",
              "description": "If registrations require manual approval, this text will be reviewed by moderators."
            }
          ],
          "queryParams": [],
          "returns": "Token",
          "pathParams": [],
          "uri": "/api/v1/accounts",
          "description": "Register an account"
        },
        "familiar_followers": {
          "returnsArray": 1,
          "method": "GET",
          "namespace": "accounts",
          "uri": "/api/v1/accounts/familiar_followers",
          "pathParams": [],
          "returns": "FamiliarFollowers",
          "formParams": [],
          "queryParams": [
            {
              "type": "array<String>",
              "description": "Find familiar followers for the provided account IDs.",
              "name": "id[]",
              "nullable": 0,
              "required": 0
            }
          ],
          "name": "familiar_followers",
          "url": "https://docs.joinmastodon.org/methods/accounts/#familiar_followers",
          "description": "Find familiar followers"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/accounts/"
    },
    "oauth": {
      "description": "Generate and manage OAuth tokens.",
      "methods": {
        "authorize": {
          "description": "Authorize a user",
          "pathParams": [],
          "uri": "/oauth/authorize",
          "url": "https://docs.joinmastodon.org/methods/oauth/#authorize",
          "queryParams": [
            {
              "name": "response_type",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "Should be set equal to `code`."
            },
            {
              "type": "string",
              "description": "The client ID, obtained during app registration.",
              "nullable": 0,
              "name": "client_id",
              "required": 1
            },
            {
              "type": "string",
              "description": "Set a URI to redirect the user to. If this parameter is set to `urn:ietf:wg:oauth:2.0:oob` then the authorization code will be shown instead. Must match one of the `redirect_uris` declared during app registration.",
              "nullable": 0,
              "name": "redirect_uri",
              "required": 1
            },
            {
              "type": "string",
              "description": "List of requested OAuth scopes, separated by spaces (or by pluses, if using query parameters). Must be a subset of `scopes` declared during app registration. If not provided, defaults to `read`.",
              "name": "scope",
              "nullable": 0,
              "required": 0
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "force_login",
              "description": "Forces the user to re-login, which is necessary for authorizing with multiple accounts from the same instance.",
              "type": "boolean"
            },
            {
              "name": "lang",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "The ISO 639-1 two-letter language code to use while rendering the authorization form."
            }
          ],
          "formParams": [],
          "returns": "EmptyOrUnknown",
          "name": "authorize",
          "namespace": "oauth",
          "method": "GET",
          "returnsArray": null
        },
        "revoke": {
          "uri": "/oauth/revoke",
          "pathParams": [],
          "name": "revoke",
          "formParams": [
            {
              "type": "string",
              "description": "The client ID, obtained during app registration.",
              "nullable": 0,
              "name": "client_id",
              "required": 1
            },
            {
              "nullable": 0,
              "name": "client_secret",
              "required": 1,
              "type": "string",
              "description": "The client secret, obtained during app registration."
            },
            {
              "nullable": 0,
              "name": "token",
              "required": 1,
              "type": "string",
              "description": "The previously obtained token, to be invalidated."
            }
          ],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "url": "https://docs.joinmastodon.org/methods/oauth/#revoke",
          "description": "Revoke a token",
          "returnsArray": null,
          "namespace": "oauth",
          "method": "POST"
        },
        "token": {
          "returnsArray": null,
          "namespace": "oauth",
          "method": "POST",
          "pathParams": [],
          "uri": "/oauth/token",
          "url": "https://docs.joinmastodon.org/methods/oauth/#token",
          "formParams": [
            {
              "type": "string",
              "description": "Set equal to `authorization_code` if `code` is provided in order to gain user-level access. Otherwise, set equal to `client_credentials` to obtain app-level access only.",
              "nullable": 0,
              "name": "grant_type",
              "required": 1
            },
            {
              "required": 0,
              "name": "code",
              "nullable": 0,
              "description": "A user authorization code, obtained via [GET /oauth/authorize](#authorize).",
              "type": "string"
            },
            {
              "description": "The client ID, obtained during app registration.",
              "type": "string",
              "required": 1,
              "name": "client_id",
              "nullable": 0
            },
            {
              "type": "string",
              "description": "The client secret, obtained during app registration.",
              "name": "client_secret",
              "nullable": 0,
              "required": 1
            },
            {
              "name": "redirect_uri",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the token will be shown instead. Must match one of the `redirect_uris` declared during app registration."
            },
            {
              "nullable": 0,
              "name": "scope",
              "required": 0,
              "type": "string",
              "description": "List of requested OAuth scopes, separated by spaces (or by pluses, if using query parameters). If `code` was provided, then this must be equal to the `scope` requested from the user. Otherwise, it must be a subset of `scopes` declared during app registration. If not provided, defaults to `read`."
            }
          ],
          "queryParams": [],
          "returns": "Token",
          "name": "token",
          "description": "Obtain a token"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/oauth/"
    },
    "reports": {
      "description": "Report problematic users to your moderators.",
      "url": "https://docs.joinmastodon.org/methods/reports/",
      "methods": {
        "post": {
          "namespace": "reports",
          "method": "POST",
          "returnsArray": null,
          "description": "File a report",
          "name": "post",
          "formParams": [
            {
              "type": "string",
              "description": "ID of the account to report.",
              "name": "account_id",
              "nullable": 0,
              "required": 1
            },
            {
              "required": 0,
              "name": "status_ids[]",
              "nullable": 0,
              "description": "You can attach statuses to the report to provide additional context.",
              "type": "array<String>"
            },
            {
              "type": "string",
              "description": "The reason for the report. Default maximum of 1000 characters.",
              "nullable": 0,
              "name": "comment",
              "required": 0
            },
            {
              "description": "If the account is remote, should the report be forwarded to the remote admin? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "nullable": 0,
              "name": "forward"
            },
            {
              "type": "string",
              "description": "Specify if the report is due to `spam`, `violation` of enumerated instance rules, or some `other` reason. Defaults to `other`. Will be set to `violation` if `rule_ids[]` is provided (regardless of any category value you provide).",
              "name": "category",
              "nullable": 0,
              "required": 0
            },
            {
              "description": "For `violation` category reports, specify the ID of the exact rules broken. Rules and their IDs are available via [GET /api/v1/instance/rules]({{< relref \"methods/instance#rules\" >}}) and [GET /api/v1/instance]({{< relref \"methods/instance#get\" >}}).",
              "type": "array<Integer>",
              "required": 0,
              "nullable": 0,
              "name": "rule_ids[]"
            }
          ],
          "queryParams": [],
          "returns": "Report",
          "url": "https://docs.joinmastodon.org/methods/reports/#post",
          "uri": "/api/v1/reports",
          "pathParams": []
        }
      }
    },
    "announcements": {
      "description": "For announcements set by administration.",
      "methods": {
        "get": {
          "namespace": "announcements",
          "method": "GET",
          "returnsArray": 1,
          "description": "View all announcements",
          "url": "https://docs.joinmastodon.org/methods/announcements/#get",
          "returns": "Announcement",
          "formParams": [],
          "queryParams": [
            {
              "nullable": 0,
              "name": "with_dismissed",
              "required": 0,
              "type": "boolean",
              "description": "If true, response will include announcements dismissed by the user. Defaults to false."
            }
          ],
          "name": "get",
          "pathParams": [],
          "uri": "/api/v1/announcements"
        },
        "delete-reactions": {
          "description": "Remove a reaction from an announcement",
          "uri": "/api/v1/announcements/:id/reactions/:name",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Announcement in the database.",
              "type": "string"
            },
            {
              "required": 1,
              "name": "name",
              "nullable": 0,
              "description": "Unicode emoji, or the shortcode of a custom emoji.",
              "type": "string"
            }
          ],
          "formParams": [],
          "name": "delete-reactions",
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "url": "https://docs.joinmastodon.org/methods/announcements/#delete-reactions",
          "method": "DELETE",
          "namespace": "announcements",
          "returnsArray": null
        },
        "dismiss": {
          "url": "https://docs.joinmastodon.org/methods/announcements/#dismiss",
          "queryParams": [],
          "formParams": [],
          "returns": "EmptyOrUnknown",
          "name": "dismiss",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Announcement in the database.",
              "name": "id",
              "nullable": 0,
              "required": 1
            }
          ],
          "uri": "/api/v1/announcements/:id/dismiss",
          "description": "Dismiss an announcement",
          "returnsArray": null,
          "namespace": "announcements",
          "method": "POST"
        },
        "put-reactions": {
          "description": "Add a reaction to an announcement",
          "url": "https://docs.joinmastodon.org/methods/announcements/#put-reactions",
          "name": "put-reactions",
          "formParams": [],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "pathParams": [
            {
              "description": "The ID of the Announcement in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            },
            {
              "nullable": 0,
              "name": "name",
              "required": 1,
              "type": "string",
              "description": "Unicode emoji, or the shortcode of a custom emoji."
            }
          ],
          "uri": "/api/v1/announcements/:id/reactions/:name",
          "namespace": "announcements",
          "method": "PUT",
          "returnsArray": null
        }
      },
      "url": "https://docs.joinmastodon.org/methods/announcements/"
    },
    "directory": {
      "url": "https://docs.joinmastodon.org/methods/directory/",
      "methods": {
        "get": {
          "returnsArray": 1,
          "method": "GET",
          "namespace": "directory",
          "url": "https://docs.joinmastodon.org/methods/directory/#get",
          "formParams": [],
          "name": "get",
          "queryParams": [
            {
              "type": "integer",
              "description": "Skip the first n results.",
              "nullable": 0,
              "name": "offset",
              "required": 0
            },
            {
              "nullable": 0,
              "name": "limit",
              "required": 0,
              "type": "integer",
              "description": "How many accounts to load. Defaults to 40 accounts. Max 80 accounts."
            },
            {
              "description": "Use `active` to sort by most recently posted statuses (default) or `new` to sort by most recently created profiles.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "order"
            },
            {
              "name": "local",
              "nullable": 0,
              "required": 0,
              "type": "boolean",
              "description": "If true, returns only local accounts."
            }
          ],
          "returns": "Account",
          "pathParams": [],
          "uri": "/api/v1/directory",
          "description": "View profile directory"
        }
      },
      "description": "A directory of profiles that your website is aware of."
    },
    "statuses": {
      "description": "Publish, interact, and view information about statuses.",
      "methods": {
        "pin": {
          "url": "https://docs.joinmastodon.org/methods/statuses/#pin",
          "formParams": [],
          "queryParams": [],
          "name": "pin",
          "returns": "Status",
          "pathParams": [
            {
              "description": "The local ID of the Status in the database. The status should be authored by the authorized account.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/statuses/:id/pin",
          "description": "Pin status to profile",
          "returnsArray": null,
          "method": "POST",
          "namespace": "statuses"
        },
        "edit": {
          "description": "Edit a status",
          "uri": "/api/v1/statuses/:id",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The ID of the Status in the database.",
              "type": "string"
            }
          ],
          "name": "edit",
          "formParams": [
            {
              "required": 0,
              "name": "status",
              "nullable": 0,
              "description": "The plain text content of the status.",
              "type": "string"
            },
            {
              "type": "string",
              "description": "The plain text subject or content warning of the status.",
              "nullable": 0,
              "name": "spoiler_text",
              "required": 0
            },
            {
              "nullable": 0,
              "name": "sensitive",
              "required": 0,
              "type": "boolean",
              "description": "Whether the status should be marked as sensitive."
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "language",
              "description": "ISO 639 language code for the status.",
              "type": "string"
            },
            {
              "description": "Include Attachment IDs to be attached as media. If provided, `status` becomes optional, and `poll` cannot be used.",
              "type": "array<String>",
              "required": 0,
              "nullable": 0,
              "name": "media_ids[]"
            },
            {
              "name": "poll",
              "nullable": 1,
              "required": 0,
              "type": "array",
              "description": "poll[options][]: Possible answers to the poll. If provided, `media_ids` cannot be used, and `poll[expires_in]` must be provided."
            }
          ],
          "queryParams": [],
          "returns": "Status",
          "url": "https://docs.joinmastodon.org/methods/statuses/#edit",
          "namespace": "statuses",
          "method": "PUT",
          "returnsArray": null
        },
        "unreblog": {
          "returnsArray": null,
          "method": "POST",
          "namespace": "statuses",
          "url": "https://docs.joinmastodon.org/methods/statuses/#unreblog",
          "queryParams": [],
          "formParams": [],
          "returns": "Status",
          "name": "unreblog",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Status in the database.",
              "name": "id",
              "nullable": 0,
              "required": 1
            }
          ],
          "uri": "/api/v1/statuses/:id/unreblog",
          "description": "Undo boost of a status"
        },
        "source": {
          "description": "View status source",
          "pathParams": [
            {
              "name": "id",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "The local ID of the Status in the database."
            }
          ],
          "uri": "/api/v1/statuses/:id/source",
          "url": "https://docs.joinmastodon.org/methods/statuses/#source",
          "formParams": [],
          "name": "source",
          "queryParams": [],
          "returns": "StatusSource",
          "namespace": "statuses",
          "method": "GET",
          "returnsArray": null
        },
        "delete": {
          "namespace": "statuses",
          "method": "DELETE",
          "returnsArray": null,
          "description": "Delete a status",
          "pathParams": [
            {
              "description": "The ID of the Status in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/statuses/:id",
          "url": "https://docs.joinmastodon.org/methods/statuses/#delete",
          "queryParams": [],
          "formParams": [],
          "name": "delete",
          "returns": "Status"
        },
        "boost": {
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the Status in the database."
            }
          ],
          "uri": "/api/v1/statuses/:id/reblog",
          "url": "https://docs.joinmastodon.org/methods/statuses/#boost",
          "queryParams": [],
          "formParams": [
            {
              "description": "Any visibility except `limited` or `direct` (i.e. `public`, `unlisted`, `private`). Defaults to public. Currently unused in UI.",
              "type": "string",
              "required": 0,
              "name": "visibility",
              "nullable": 0
            }
          ],
          "returns": "Status",
          "name": "boost",
          "description": "Boost a status",
          "returnsArray": null,
          "namespace": "statuses",
          "method": "POST"
        },
        "card": {
          "namespace": "statuses",
          "method": "GET",
          "returnsArray": null,
          "description": "(DEPRECATED) Fetch preview card",
          "uri": "/api/v1/statuses/:id/card",
          "pathParams": [
            {
              "name": "id",
              "nullable": 0,
              "required": 1,
              "type": "string",
              "description": "The local ID of the Status in the database."
            }
          ],
          "queryParams": [],
          "formParams": [],
          "name": "card",
          "returns": "PreviewCard",
          "url": "https://docs.joinmastodon.org/methods/statuses/#card"
        },
        "get": {
          "url": "https://docs.joinmastodon.org/methods/statuses/#get",
          "name": "get",
          "formParams": [],
          "queryParams": [],
          "returns": "Status",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the Status in the database."
            }
          ],
          "uri": "/api/v1/statuses/:id",
          "description": "View a single status",
          "returnsArray": null,
          "method": "GET",
          "namespace": "statuses"
        },
        "unpin": {
          "method": "POST",
          "namespace": "statuses",
          "returnsArray": null,
          "description": "Unpin status from profile",
          "uri": "/api/v1/statuses/:id/unpin",
          "pathParams": [
            {
              "type": "string",
              "description": "The local ID of the Status in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "name": "unpin",
          "formParams": [],
          "queryParams": [],
          "returns": "Status",
          "url": "https://docs.joinmastodon.org/methods/statuses/#unpin"
        },
        "context": {
          "formParams": [],
          "returns": "Context",
          "queryParams": [],
          "name": "context",
          "url": "https://docs.joinmastodon.org/methods/statuses/#context",
          "uri": "/api/v1/statuses/:id/context",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Status in the database.",
              "type": "string"
            }
          ],
          "description": "Get parent and child statuses in context",
          "returnsArray": null,
          "namespace": "statuses",
          "method": "GET"
        },
        "unbookmark": {
          "description": "Undo bookmark of a status",
          "uri": "/api/v1/statuses/:id/unbookmark",
          "pathParams": [
            {
              "description": "The ID of the Status in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "formParams": [],
          "returns": "Status",
          "queryParams": [],
          "name": "unbookmark",
          "url": "https://docs.joinmastodon.org/methods/statuses/#unbookmark",
          "method": "POST",
          "namespace": "statuses",
          "returnsArray": null
        },
        "reblogged_by": {
          "description": "See who boosted a status",
          "pathParams": [
            {
              "description": "The ID of the Status in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/statuses/:id/reblogged_by",
          "url": "https://docs.joinmastodon.org/methods/statuses/#reblogged_by",
          "formParams": [],
          "queryParams": [
            {
              "required": 0,
              "nullable": 0,
              "name": "limit",
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts.",
              "type": "integer"
            }
          ],
          "returns": "Account",
          "name": "reblogged_by",
          "method": "GET",
          "namespace": "statuses",
          "returnsArray": 1
        },
        "unmute": {
          "returnsArray": null,
          "method": "POST",
          "namespace": "statuses",
          "url": "https://docs.joinmastodon.org/methods/statuses/#unmute",
          "name": "unmute",
          "formParams": [],
          "queryParams": [],
          "returns": "Status",
          "pathParams": [
            {
              "description": "The ID of the Status in the database.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/statuses/:id/unmute",
          "description": "Unmute a conversation"
        },
        "create": {
          "returnsArray": null,
          "namespace": "statuses",
          "method": "POST",
          "url": "https://docs.joinmastodon.org/methods/statuses/#create",
          "queryParams": [],
          "formParams": [
            {
              "required": 1,
              "name": "status",
              "nullable": 0,
              "description": "The text content of the status. If `media_ids` is provided, this becomes optional. Attaching a `poll` is optional while `status` is provided.",
              "type": "string"
            },
            {
              "nullable": 0,
              "name": "media_ids[]",
              "required": 1,
              "type": "array<String>",
              "description": "Include Attachment IDs to be attached as media. If provided, `status` becomes optional, and `poll` cannot be used."
            },
            {
              "description": "poll[options][]: Possible answers to the poll. If provided, `media_ids` cannot be used, and `poll[expires_in]` must be provided.",
              "type": "array",
              "required": 0,
              "nullable": 1,
              "name": "poll"
            },
            {
              "type": "string",
              "description": "ID of the status being replied to, if status is a reply.",
              "nullable": 0,
              "name": "in_reply_to_id",
              "required": 0
            },
            {
              "name": "sensitive",
              "nullable": 0,
              "required": 0,
              "type": "boolean",
              "description": "Mark status and attached media as sensitive? Defaults to false."
            },
            {
              "name": "spoiler_text",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Text to be shown as a warning or subject before the actual content. Statuses are generally collapsed behind this field."
            },
            {
              "nullable": 0,
              "name": "visibility",
              "required": 0,
              "type": "string",
              "description": "Sets the visibility of the posted status to `public`, `unlisted`, `private`, `direct`."
            },
            {
              "description": "ISO 639 language code for this status.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "language"
            },
            {
              "type": "string",
              "description": "ISO 8601 Datetime at which to schedule a status. Providing this parameter will cause ScheduledStatus to be returned instead of Status. Must be at least 5 minutes in the future.",
              "name": "scheduled_at",
              "nullable": 0,
              "required": 0
            }
          ],
          "returns": "Status",
          "name": "create",
          "pathParams": [],
          "uri": "/api/v1/statuses",
          "description": "Post a new status"
        },
        "unfavourite": {
          "description": "Undo favourite of a status",
          "uri": "/api/v1/statuses/:id/unfavourite",
          "pathParams": [
            {
              "description": "The ID of the Status in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "queryParams": [],
          "formParams": [],
          "returns": "Status",
          "name": "unfavourite",
          "url": "https://docs.joinmastodon.org/methods/statuses/#unfavourite",
          "method": "POST",
          "namespace": "statuses",
          "returnsArray": null
        },
        "history": {
          "description": "View edit history of a status",
          "uri": "/api/v1/statuses/:id/history",
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The local ID of the Status in the database.",
              "type": "string"
            }
          ],
          "formParams": [],
          "name": "history",
          "queryParams": [],
          "returns": "StatusEdit",
          "url": "https://docs.joinmastodon.org/methods/statuses/#history",
          "method": "GET",
          "namespace": "statuses",
          "returnsArray": 1
        },
        "mute": {
          "pathParams": [
            {
              "required": 1,
              "nullable": 0,
              "name": "id",
              "description": "The ID of the Status in the database.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/statuses/:id/mute",
          "url": "https://docs.joinmastodon.org/methods/statuses/#mute",
          "queryParams": [],
          "formParams": [],
          "returns": "Status",
          "name": "mute",
          "description": "Mute a conversation",
          "returnsArray": null,
          "method": "POST",
          "namespace": "statuses"
        },
        "translate": {
          "pathParams": [
            {
              "description": "The ID of the Status in the database.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "uri": "/api/v1/statuses/:id/translate",
          "url": "https://docs.joinmastodon.org/methods/statuses/#translate",
          "returns": "Translation",
          "formParams": [
            {
              "description": "The status content will be translated into this language. Defaults to the user's current locale.",
              "type": "string",
              "required": 0,
              "name": "lang",
              "nullable": 0
            }
          ],
          "queryParams": [],
          "name": "translate",
          "description": "Translate a status",
          "returnsArray": null,
          "namespace": "statuses",
          "method": "POST"
        },
        "favourite": {
          "url": "https://docs.joinmastodon.org/methods/statuses/#favourite",
          "queryParams": [],
          "formParams": [],
          "name": "favourite",
          "returns": "Status",
          "pathParams": [
            {
              "nullable": 0,
              "name": "id",
              "required": 1,
              "type": "string",
              "description": "The ID of the Status in the database."
            }
          ],
          "uri": "/api/v1/statuses/:id/favourite",
          "description": "Favourite a status",
          "returnsArray": null,
          "namespace": "statuses",
          "method": "POST"
        },
        "bookmark": {
          "returnsArray": null,
          "method": "POST",
          "namespace": "statuses",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Status in the database.",
              "name": "id",
              "nullable": 0,
              "required": 1
            }
          ],
          "uri": "/api/v1/statuses/:id/bookmark",
          "url": "https://docs.joinmastodon.org/methods/statuses/#bookmark",
          "queryParams": [],
          "formParams": [],
          "returns": "Status",
          "name": "bookmark",
          "description": "Bookmark a status"
        },
        "favourited_by": {
          "returnsArray": 1,
          "namespace": "statuses",
          "method": "GET",
          "formParams": [],
          "returns": "Account",
          "queryParams": [
            {
              "name": "limit",
              "nullable": 0,
              "required": 0,
              "type": "integer",
              "description": "Maximum number of results to return. Defaults to 40 accounts. Max 80 accounts."
            }
          ],
          "name": "favourited_by",
          "url": "https://docs.joinmastodon.org/methods/statuses/#favourited_by",
          "uri": "/api/v1/statuses/:id/favourited_by",
          "pathParams": [
            {
              "type": "string",
              "description": "The ID of the Status in the database.",
              "nullable": 0,
              "name": "id",
              "required": 1
            }
          ],
          "description": "See who favourited a status"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/statuses/"
    },
    "tags": {
      "methods": {
        "follow": {
          "description": "Follow a hashtag",
          "url": "https://docs.joinmastodon.org/methods/tags/#follow",
          "returns": "Tag",
          "formParams": [],
          "queryParams": [],
          "name": "follow",
          "pathParams": [
            {
              "required": 1,
              "name": "id",
              "nullable": 0,
              "description": "The name of the hashtag.",
              "type": "string"
            }
          ],
          "uri": "/api/v1/tags/:id/follow",
          "namespace": "tags",
          "method": "POST",
          "returnsArray": null
        },
        "get": {
          "method": "GET",
          "namespace": "tags",
          "returnsArray": null,
          "description": "View information about a single tag",
          "pathParams": [
            {
              "description": "The name of the hashtag.",
              "type": "string",
              "required": 1,
              "name": "id",
              "nullable": 0
            }
          ],
          "uri": "/api/v1/tags/:id",
          "url": "https://docs.joinmastodon.org/methods/tags/#get",
          "formParams": [],
          "returns": "Tag",
          "queryParams": [],
          "name": "get"
        },
        "unfollow": {
          "description": "Unfollow a hashtag",
          "pathParams": [
            {
              "description": "The name of the hashtag.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "id"
            }
          ],
          "uri": "/api/v1/tags/:id/unfollow",
          "url": "https://docs.joinmastodon.org/methods/tags/#unfollow",
          "returns": "Tag",
          "formParams": [],
          "queryParams": [],
          "name": "unfollow",
          "namespace": "tags",
          "method": "POST",
          "returnsArray": null
        }
      },
      "url": "https://docs.joinmastodon.org/methods/tags/",
      "description": "View information about or follow/unfollow hashtags."
    },
    "search": {
      "description": "Search for content in accounts, statuses and hashtags.",
      "methods": {
        "v2": {
          "description": "Perform a search",
          "url": "https://docs.joinmastodon.org/methods/search/#v2",
          "queryParams": [
            {
              "description": "The search query.",
              "type": "string",
              "required": 1,
              "nullable": 0,
              "name": "q"
            },
            {
              "name": "type",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Specify whether to search for only `accounts`, `hashtags`, `statuses`"
            },
            {
              "description": "Attempt WebFinger lookup? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "name": "resolve",
              "nullable": 0
            },
            {
              "type": "boolean",
              "description": "Only include accounts that the user is following? Defaults to false.",
              "nullable": 0,
              "name": "following",
              "required": 0
            },
            {
              "name": "account_id",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "If provided, will only return statuses authored by this account."
            },
            {
              "type": "boolean",
              "description": "Filter out unreviewed tags? Defaults to false. Use true when trying to find trending tags.",
              "nullable": 0,
              "name": "exclude_unreviewed",
              "required": 0
            },
            {
              "description": "Return results older than this ID.",
              "type": "string",
              "required": 0,
              "name": "max_id ",
              "nullable": 0
            },
            {
              "type": "string",
              "description": "Return results immediately newer than this ID.",
              "nullable": 0,
              "name": "min_id",
              "required": 0
            },
            {
              "required": 0,
              "name": "limit",
              "nullable": 0,
              "description": "Maximum number of results to return, per type. Defaults to 20 results per category. Max 40 results per category.",
              "type": "integer"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "offset",
              "description": "Skip the first n results.",
              "type": "integer"
            }
          ],
          "formParams": [],
          "returns": "Search",
          "name": "v2",
          "pathParams": [],
          "uri": "/api/v2/search",
          "method": "GET",
          "namespace": "search",
          "returnsArray": null
        },
        "v1": {
          "returnsArray": 1,
          "method": "GET",
          "namespace": "search",
          "uri": "/api/v1/search",
          "pathParams": [],
          "returns": "Search",
          "formParams": [],
          "queryParams": [
            {
              "type": "string",
              "description": "The search query.",
              "nullable": 0,
              "name": "q",
              "required": 1
            },
            {
              "name": "type",
              "nullable": 0,
              "required": 0,
              "type": "string",
              "description": "Specify whether to search for only `accounts`, `hashtags`, `statuses`"
            },
            {
              "description": "Attempt WebFinger lookup? Defaults to false.",
              "type": "boolean",
              "required": 0,
              "name": "resolve",
              "nullable": 0
            },
            {
              "description": "If provided, will only return statuses authored by this account.",
              "type": "string",
              "required": 0,
              "nullable": 0,
              "name": "account_id"
            },
            {
              "required": 0,
              "name": "max_id ",
              "nullable": 0,
              "description": "Return results older than this ID.",
              "type": "string"
            },
            {
              "required": 0,
              "name": "min_id",
              "nullable": 0,
              "description": "Return results immediately newer than this ID.",
              "type": "string"
            },
            {
              "required": 0,
              "nullable": 0,
              "name": "limit",
              "description": "Maximum number of results to return, per type. Defaults to 20 results per category. Max 40 results per category.",
              "type": "integer"
            },
            {
              "nullable": 0,
              "name": "offset",
              "required": 0,
              "type": "integer",
              "description": "Offset in search results, used for pagination. Defaults to 0."
            }
          ],
          "name": "v1",
          "url": "https://docs.joinmastodon.org/methods/search/#v1",
          "description": "(REMOVED) Search results (v1)"
        }
      },
      "url": "https://docs.joinmastodon.org/methods/search/"
    },
    "proofs": {
      "url": "https://docs.joinmastodon.org/methods/proofs/",
      "methods": {
        "get": {
          "namespace": "proofs",
          "method": "GET",
          "returnsArray": null,
          "description": "(REMOVED) View identity proofs",
          "pathParams": [],
          "uri": "/api/proofs",
          "url": "https://docs.joinmastodon.org/methods/proofs/#get",
          "queryParams": [
            {
              "required": 0,
              "name": "provider",
              "nullable": 0,
              "description": "The identity provider to be looked up. Currently only supports `keybase` (case-sensitive).",
              "type": "string"
            },
            {
              "nullable": 0,
              "name": "username",
              "required": 0,
              "type": "string",
              "description": "The username on the selected identity provider."
            }
          ],
          "formParams": [],
          "name": "get",
          "returns": "EmptyOrUnknown"
        }
      },
      "description": "For use by identity providers."
    },
    "domain_blocks": {
      "description": "Manage a user's blocked domains.",
      "url": "https://docs.joinmastodon.org/methods/domain_blocks/",
      "methods": {
        "get": {
          "description": "Get domain blocks",
          "url": "https://docs.joinmastodon.org/methods/domain_blocks/#get",
          "queryParams": [
            {
              "required": 0,
              "nullable": 0,
              "name": "limit",
              "description": "Maximum number of results to return. Defaults to 100 domain blocks. Max 200 domain blocks.",
              "type": "integer"
            }
          ],
          "formParams": [],
          "returns": "EmptyOrUnknown",
          "name": "get",
          "pathParams": [],
          "uri": "/api/v1/domain_blocks",
          "namespace": "domain_blocks",
          "method": "GET",
          "returnsArray": 1
        },
        "unblock": {
          "description": "Unblock a domain",
          "pathParams": [],
          "uri": "/api/v1/domain_blocks",
          "url": "https://docs.joinmastodon.org/methods/domain_blocks/#unblock",
          "formParams": [
            {
              "type": "string",
              "description": "Domain to unblock.",
              "nullable": 0,
              "name": "domain",
              "required": 1
            }
          ],
          "queryParams": [],
          "returns": "EmptyOrUnknown",
          "name": "unblock",
          "method": "DELETE",
          "namespace": "domain_blocks",
          "returnsArray": null
        },
        "block": {
          "uri": "/api/v1/domain_blocks",
          "pathParams": [],
          "queryParams": [],
          "formParams": [
            {
              "description": "Domain to block.",
              "type": "string",
              "required": 1,
              "name": "domain",
              "nullable": 0
            }
          ],
          "name": "block",
          "returns": "EmptyOrUnknown",
          "url": "https://docs.joinmastodon.org/methods/domain_blocks/#block",
          "description": "Block a domain",
          "returnsArray": null,
          "namespace": "domain_blocks",
          "method": "POST"
        }
      }
    }
  }
}
